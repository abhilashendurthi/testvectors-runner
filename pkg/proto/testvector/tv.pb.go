// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/proto/testvector/tv.proto

package stratum_testing

import (
	fmt "fmt"
	math "math"

	v1 "github.com/abhilashendurthi/p4runtime/proto/p4/v1"
	proto "github.com/golang/protobuf/proto"
	gnmi "github.com/openconfig/gnmi/proto/gnmi"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PortStimulus_State int32

const (
	PortStimulus_STATE_UNKNOWN     PortStimulus_State = 0
	PortStimulus_STATE_UP          PortStimulus_State = 1
	PortStimulus_STATE_DOWN        PortStimulus_State = 2
	PortStimulus_STATE_NOT_PRESENT PortStimulus_State = 3
)

var PortStimulus_State_name = map[int32]string{
	0: "STATE_UNKNOWN",
	1: "STATE_UP",
	2: "STATE_DOWN",
	3: "STATE_NOT_PRESENT",
}

var PortStimulus_State_value = map[string]int32{
	"STATE_UNKNOWN":     0,
	"STATE_UP":          1,
	"STATE_DOWN":        2,
	"STATE_NOT_PRESENT": 3,
}

func (x PortStimulus_State) String() string {
	return proto.EnumName(PortStimulus_State_name, int32(x))
}

func (PortStimulus_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{5, 0}
}

type ControlPlaneOperation struct {
	// Types that are valid to be assigned to Operations:
	//	*ControlPlaneOperation_WriteOperation_
	//	*ControlPlaneOperation_PacketOutOperation_
	//	*ControlPlaneOperation_PipelineConfigOperation_
	Operations           isControlPlaneOperation_Operations `protobuf_oneof:"operations"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ControlPlaneOperation) Reset()         { *m = ControlPlaneOperation{} }
func (m *ControlPlaneOperation) String() string { return proto.CompactTextString(m) }
func (*ControlPlaneOperation) ProtoMessage()    {}
func (*ControlPlaneOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{0}
}

func (m *ControlPlaneOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlPlaneOperation.Unmarshal(m, b)
}
func (m *ControlPlaneOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlPlaneOperation.Marshal(b, m, deterministic)
}
func (m *ControlPlaneOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlPlaneOperation.Merge(m, src)
}
func (m *ControlPlaneOperation) XXX_Size() int {
	return xxx_messageInfo_ControlPlaneOperation.Size(m)
}
func (m *ControlPlaneOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlPlaneOperation.DiscardUnknown(m)
}

var xxx_messageInfo_ControlPlaneOperation proto.InternalMessageInfo

type isControlPlaneOperation_Operations interface {
	isControlPlaneOperation_Operations()
}

type ControlPlaneOperation_WriteOperation_ struct {
	WriteOperation *ControlPlaneOperation_WriteOperation `protobuf:"bytes,1,opt,name=write_operation,json=writeOperation,proto3,oneof"`
}

type ControlPlaneOperation_PacketOutOperation_ struct {
	PacketOutOperation *ControlPlaneOperation_PacketOutOperation `protobuf:"bytes,2,opt,name=packet_out_operation,json=packetOutOperation,proto3,oneof"`
}

type ControlPlaneOperation_PipelineConfigOperation_ struct {
	PipelineConfigOperation *ControlPlaneOperation_PipelineConfigOperation `protobuf:"bytes,3,opt,name=pipeline_config_operation,json=pipelineConfigOperation,proto3,oneof"`
}

func (*ControlPlaneOperation_WriteOperation_) isControlPlaneOperation_Operations() {}

func (*ControlPlaneOperation_PacketOutOperation_) isControlPlaneOperation_Operations() {}

func (*ControlPlaneOperation_PipelineConfigOperation_) isControlPlaneOperation_Operations() {}

func (m *ControlPlaneOperation) GetOperations() isControlPlaneOperation_Operations {
	if m != nil {
		return m.Operations
	}
	return nil
}

func (m *ControlPlaneOperation) GetWriteOperation() *ControlPlaneOperation_WriteOperation {
	if x, ok := m.GetOperations().(*ControlPlaneOperation_WriteOperation_); ok {
		return x.WriteOperation
	}
	return nil
}

func (m *ControlPlaneOperation) GetPacketOutOperation() *ControlPlaneOperation_PacketOutOperation {
	if x, ok := m.GetOperations().(*ControlPlaneOperation_PacketOutOperation_); ok {
		return x.PacketOutOperation
	}
	return nil
}

func (m *ControlPlaneOperation) GetPipelineConfigOperation() *ControlPlaneOperation_PipelineConfigOperation {
	if x, ok := m.GetOperations().(*ControlPlaneOperation_PipelineConfigOperation_); ok {
		return x.PipelineConfigOperation
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ControlPlaneOperation) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ControlPlaneOperation_WriteOperation_)(nil),
		(*ControlPlaneOperation_PacketOutOperation_)(nil),
		(*ControlPlaneOperation_PipelineConfigOperation_)(nil),
	}
}

type ControlPlaneOperation_WriteOperation struct {
	// The write request to program all the forwarding entries and its
	// corresponding RPC response.
	P4WriteRequest       *v1.WriteRequest  `protobuf:"bytes,1,opt,name=p4_write_request,json=p4WriteRequest,proto3" json:"p4_write_request,omitempty"`
	P4WriteResponse      *v1.WriteResponse `protobuf:"bytes,2,opt,name=p4_write_response,json=p4WriteResponse,proto3" json:"p4_write_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ControlPlaneOperation_WriteOperation) Reset()         { *m = ControlPlaneOperation_WriteOperation{} }
func (m *ControlPlaneOperation_WriteOperation) String() string { return proto.CompactTextString(m) }
func (*ControlPlaneOperation_WriteOperation) ProtoMessage()    {}
func (*ControlPlaneOperation_WriteOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{0, 0}
}

func (m *ControlPlaneOperation_WriteOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlPlaneOperation_WriteOperation.Unmarshal(m, b)
}
func (m *ControlPlaneOperation_WriteOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlPlaneOperation_WriteOperation.Marshal(b, m, deterministic)
}
func (m *ControlPlaneOperation_WriteOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlPlaneOperation_WriteOperation.Merge(m, src)
}
func (m *ControlPlaneOperation_WriteOperation) XXX_Size() int {
	return xxx_messageInfo_ControlPlaneOperation_WriteOperation.Size(m)
}
func (m *ControlPlaneOperation_WriteOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlPlaneOperation_WriteOperation.DiscardUnknown(m)
}

var xxx_messageInfo_ControlPlaneOperation_WriteOperation proto.InternalMessageInfo

func (m *ControlPlaneOperation_WriteOperation) GetP4WriteRequest() *v1.WriteRequest {
	if m != nil {
		return m.P4WriteRequest
	}
	return nil
}

func (m *ControlPlaneOperation_WriteOperation) GetP4WriteResponse() *v1.WriteResponse {
	if m != nil {
		return m.P4WriteResponse
	}
	return nil
}

type ControlPlaneOperation_PacketOutOperation struct {
	// Defines the packet to be sent by the SDN controller to a dataplane port
	// or ingress pipeline. The packets are received by the P4Runtime agent and
	// sent to the switching chip via its CPU port.
	P4PacketOut *v1.PacketOut `protobuf:"bytes,1,opt,name=p4_packet_out,json=p4PacketOut,proto3" json:"p4_packet_out,omitempty"`
	// Number of packets to be sent out. A negative number refers to "continuous
	// mode".
	NumOfPackets int64 `protobuf:"varint,2,opt,name=num_of_packets,json=numOfPackets,proto3" json:"num_of_packets,omitempty"`
	// "min" and "max" speed at which packets will be sent to the CPU port.
	// Makes sense only if multiple packets are egressed. A zero speed means
	// "dont care".
	MinSpeedBps uint64 `protobuf:"varint,3,opt,name=min_speed_bps,json=minSpeedBps,proto3" json:"min_speed_bps,omitempty"`
	MaxSpeedBps uint64 `protobuf:"varint,4,opt,name=max_speed_bps,json=maxSpeedBps,proto3" json:"max_speed_bps,omitempty"`
	// class of service of the packets.
	Cos                  int32    `protobuf:"varint,5,opt,name=cos,proto3" json:"cos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlPlaneOperation_PacketOutOperation) Reset() {
	*m = ControlPlaneOperation_PacketOutOperation{}
}
func (m *ControlPlaneOperation_PacketOutOperation) String() string { return proto.CompactTextString(m) }
func (*ControlPlaneOperation_PacketOutOperation) ProtoMessage()    {}
func (*ControlPlaneOperation_PacketOutOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{0, 1}
}

func (m *ControlPlaneOperation_PacketOutOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlPlaneOperation_PacketOutOperation.Unmarshal(m, b)
}
func (m *ControlPlaneOperation_PacketOutOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlPlaneOperation_PacketOutOperation.Marshal(b, m, deterministic)
}
func (m *ControlPlaneOperation_PacketOutOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlPlaneOperation_PacketOutOperation.Merge(m, src)
}
func (m *ControlPlaneOperation_PacketOutOperation) XXX_Size() int {
	return xxx_messageInfo_ControlPlaneOperation_PacketOutOperation.Size(m)
}
func (m *ControlPlaneOperation_PacketOutOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlPlaneOperation_PacketOutOperation.DiscardUnknown(m)
}

var xxx_messageInfo_ControlPlaneOperation_PacketOutOperation proto.InternalMessageInfo

func (m *ControlPlaneOperation_PacketOutOperation) GetP4PacketOut() *v1.PacketOut {
	if m != nil {
		return m.P4PacketOut
	}
	return nil
}

func (m *ControlPlaneOperation_PacketOutOperation) GetNumOfPackets() int64 {
	if m != nil {
		return m.NumOfPackets
	}
	return 0
}

func (m *ControlPlaneOperation_PacketOutOperation) GetMinSpeedBps() uint64 {
	if m != nil {
		return m.MinSpeedBps
	}
	return 0
}

func (m *ControlPlaneOperation_PacketOutOperation) GetMaxSpeedBps() uint64 {
	if m != nil {
		return m.MaxSpeedBps
	}
	return 0
}

func (m *ControlPlaneOperation_PacketOutOperation) GetCos() int32 {
	if m != nil {
		return m.Cos
	}
	return 0
}

type ControlPlaneOperation_PipelineConfigOperation struct {
	// The forwarding pipeline config to push to the switch, to test setting
	// and/or mutating the config directly via P4Runtime API, and its expected
	// RPC response. Note that forwarding pipeline config is also set via gNMI.
	P4SetPipelineConfigRequest  *v1.SetForwardingPipelineConfigRequest  `protobuf:"bytes,1,opt,name=p4_set_pipeline_config_request,json=p4SetPipelineConfigRequest,proto3" json:"p4_set_pipeline_config_request,omitempty"`
	P4SetPipelineConfigResponse *v1.SetForwardingPipelineConfigResponse `protobuf:"bytes,2,opt,name=p4_set_pipeline_config_response,json=p4SetPipelineConfigResponse,proto3" json:"p4_set_pipeline_config_response,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                                `json:"-"`
	XXX_unrecognized            []byte                                  `json:"-"`
	XXX_sizecache               int32                                   `json:"-"`
}

func (m *ControlPlaneOperation_PipelineConfigOperation) Reset() {
	*m = ControlPlaneOperation_PipelineConfigOperation{}
}
func (m *ControlPlaneOperation_PipelineConfigOperation) String() string {
	return proto.CompactTextString(m)
}
func (*ControlPlaneOperation_PipelineConfigOperation) ProtoMessage() {}
func (*ControlPlaneOperation_PipelineConfigOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{0, 2}
}

func (m *ControlPlaneOperation_PipelineConfigOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlPlaneOperation_PipelineConfigOperation.Unmarshal(m, b)
}
func (m *ControlPlaneOperation_PipelineConfigOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlPlaneOperation_PipelineConfigOperation.Marshal(b, m, deterministic)
}
func (m *ControlPlaneOperation_PipelineConfigOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlPlaneOperation_PipelineConfigOperation.Merge(m, src)
}
func (m *ControlPlaneOperation_PipelineConfigOperation) XXX_Size() int {
	return xxx_messageInfo_ControlPlaneOperation_PipelineConfigOperation.Size(m)
}
func (m *ControlPlaneOperation_PipelineConfigOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlPlaneOperation_PipelineConfigOperation.DiscardUnknown(m)
}

var xxx_messageInfo_ControlPlaneOperation_PipelineConfigOperation proto.InternalMessageInfo

func (m *ControlPlaneOperation_PipelineConfigOperation) GetP4SetPipelineConfigRequest() *v1.SetForwardingPipelineConfigRequest {
	if m != nil {
		return m.P4SetPipelineConfigRequest
	}
	return nil
}

func (m *ControlPlaneOperation_PipelineConfigOperation) GetP4SetPipelineConfigResponse() *v1.SetForwardingPipelineConfigResponse {
	if m != nil {
		return m.P4SetPipelineConfigResponse
	}
	return nil
}

type ControlPlaneExpectation struct {
	// Types that are valid to be assigned to Expectations:
	//	*ControlPlaneExpectation_ReadExpectation_
	//	*ControlPlaneExpectation_PacketInExpectation_
	//	*ControlPlaneExpectation_PipelineConfigExpectation_
	Expectations         isControlPlaneExpectation_Expectations `protobuf_oneof:"expectations"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *ControlPlaneExpectation) Reset()         { *m = ControlPlaneExpectation{} }
func (m *ControlPlaneExpectation) String() string { return proto.CompactTextString(m) }
func (*ControlPlaneExpectation) ProtoMessage()    {}
func (*ControlPlaneExpectation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{1}
}

func (m *ControlPlaneExpectation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlPlaneExpectation.Unmarshal(m, b)
}
func (m *ControlPlaneExpectation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlPlaneExpectation.Marshal(b, m, deterministic)
}
func (m *ControlPlaneExpectation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlPlaneExpectation.Merge(m, src)
}
func (m *ControlPlaneExpectation) XXX_Size() int {
	return xxx_messageInfo_ControlPlaneExpectation.Size(m)
}
func (m *ControlPlaneExpectation) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlPlaneExpectation.DiscardUnknown(m)
}

var xxx_messageInfo_ControlPlaneExpectation proto.InternalMessageInfo

type isControlPlaneExpectation_Expectations interface {
	isControlPlaneExpectation_Expectations()
}

type ControlPlaneExpectation_ReadExpectation_ struct {
	ReadExpectation *ControlPlaneExpectation_ReadExpectation `protobuf:"bytes,1,opt,name=read_expectation,json=readExpectation,proto3,oneof"`
}

type ControlPlaneExpectation_PacketInExpectation_ struct {
	PacketInExpectation *ControlPlaneExpectation_PacketInExpectation `protobuf:"bytes,2,opt,name=packet_in_expectation,json=packetInExpectation,proto3,oneof"`
}

type ControlPlaneExpectation_PipelineConfigExpectation_ struct {
	PipelineConfigExpectation *ControlPlaneExpectation_PipelineConfigExpectation `protobuf:"bytes,3,opt,name=pipeline_config_expectation,json=pipelineConfigExpectation,proto3,oneof"`
}

func (*ControlPlaneExpectation_ReadExpectation_) isControlPlaneExpectation_Expectations() {}

func (*ControlPlaneExpectation_PacketInExpectation_) isControlPlaneExpectation_Expectations() {}

func (*ControlPlaneExpectation_PipelineConfigExpectation_) isControlPlaneExpectation_Expectations() {}

func (m *ControlPlaneExpectation) GetExpectations() isControlPlaneExpectation_Expectations {
	if m != nil {
		return m.Expectations
	}
	return nil
}

func (m *ControlPlaneExpectation) GetReadExpectation() *ControlPlaneExpectation_ReadExpectation {
	if x, ok := m.GetExpectations().(*ControlPlaneExpectation_ReadExpectation_); ok {
		return x.ReadExpectation
	}
	return nil
}

func (m *ControlPlaneExpectation) GetPacketInExpectation() *ControlPlaneExpectation_PacketInExpectation {
	if x, ok := m.GetExpectations().(*ControlPlaneExpectation_PacketInExpectation_); ok {
		return x.PacketInExpectation
	}
	return nil
}

func (m *ControlPlaneExpectation) GetPipelineConfigExpectation() *ControlPlaneExpectation_PipelineConfigExpectation {
	if x, ok := m.GetExpectations().(*ControlPlaneExpectation_PipelineConfigExpectation_); ok {
		return x.PipelineConfigExpectation
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ControlPlaneExpectation) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ControlPlaneExpectation_ReadExpectation_)(nil),
		(*ControlPlaneExpectation_PacketInExpectation_)(nil),
		(*ControlPlaneExpectation_PipelineConfigExpectation_)(nil),
	}
}

type ControlPlaneExpectation_ReadExpectation struct {
	P4ReadRequest *v1.ReadRequest `protobuf:"bytes,1,opt,name=p4_read_request,json=p4ReadRequest,proto3" json:"p4_read_request,omitempty"`
	// Set of ReadResponse protos read from the streaming channel. Note that
	// for the case of Read RPC, channel has to close after all these responses
	// are sent back.
	P4ReadResponses      []*v1.ReadResponse `protobuf:"bytes,2,rep,name=p4_read_responses,json=p4ReadResponses,proto3" json:"p4_read_responses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ControlPlaneExpectation_ReadExpectation) Reset() {
	*m = ControlPlaneExpectation_ReadExpectation{}
}
func (m *ControlPlaneExpectation_ReadExpectation) String() string { return proto.CompactTextString(m) }
func (*ControlPlaneExpectation_ReadExpectation) ProtoMessage()    {}
func (*ControlPlaneExpectation_ReadExpectation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{1, 0}
}

func (m *ControlPlaneExpectation_ReadExpectation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlPlaneExpectation_ReadExpectation.Unmarshal(m, b)
}
func (m *ControlPlaneExpectation_ReadExpectation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlPlaneExpectation_ReadExpectation.Marshal(b, m, deterministic)
}
func (m *ControlPlaneExpectation_ReadExpectation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlPlaneExpectation_ReadExpectation.Merge(m, src)
}
func (m *ControlPlaneExpectation_ReadExpectation) XXX_Size() int {
	return xxx_messageInfo_ControlPlaneExpectation_ReadExpectation.Size(m)
}
func (m *ControlPlaneExpectation_ReadExpectation) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlPlaneExpectation_ReadExpectation.DiscardUnknown(m)
}

var xxx_messageInfo_ControlPlaneExpectation_ReadExpectation proto.InternalMessageInfo

func (m *ControlPlaneExpectation_ReadExpectation) GetP4ReadRequest() *v1.ReadRequest {
	if m != nil {
		return m.P4ReadRequest
	}
	return nil
}

func (m *ControlPlaneExpectation_ReadExpectation) GetP4ReadResponses() []*v1.ReadResponse {
	if m != nil {
		return m.P4ReadResponses
	}
	return nil
}

type ControlPlaneExpectation_PacketInExpectation struct {
	// Defines the packet to be received on the CPU port and sent to the SDN
	// SDN controller.
	P4PacketIn *v1.PacketIn `protobuf:"bytes,1,opt,name=p4_packet_in,json=p4PacketIn,proto3" json:"p4_packet_in,omitempty"`
	// number of packets to be received. A negative number refers to "continuous
	// mode".
	NumOfPackets int64 `protobuf:"varint,2,opt,name=num_of_packets,json=numOfPackets,proto3" json:"num_of_packets,omitempty"`
	// "min" and "max" speed at which packets will be received at CPU port.
	// Makes sense if multiple packets are ingressed. A zero speed means "dont
	// care". If min and max speeds are the same and positive, the measured
	// speed will be strictly checked to be the same as the value specified.
	// Expected speeds are are typically specified to test rate limiting.
	MinSpeedBps uint64 `protobuf:"varint,3,opt,name=min_speed_bps,json=minSpeedBps,proto3" json:"min_speed_bps,omitempty"`
	MaxSpeedBps uint64 `protobuf:"varint,4,opt,name=max_speed_bps,json=maxSpeedBps,proto3" json:"max_speed_bps,omitempty"`
	// class of service of the packets.
	Cos                  int32    `protobuf:"varint,5,opt,name=cos,proto3" json:"cos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlPlaneExpectation_PacketInExpectation) Reset() {
	*m = ControlPlaneExpectation_PacketInExpectation{}
}
func (m *ControlPlaneExpectation_PacketInExpectation) String() string {
	return proto.CompactTextString(m)
}
func (*ControlPlaneExpectation_PacketInExpectation) ProtoMessage() {}
func (*ControlPlaneExpectation_PacketInExpectation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{1, 1}
}

func (m *ControlPlaneExpectation_PacketInExpectation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlPlaneExpectation_PacketInExpectation.Unmarshal(m, b)
}
func (m *ControlPlaneExpectation_PacketInExpectation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlPlaneExpectation_PacketInExpectation.Marshal(b, m, deterministic)
}
func (m *ControlPlaneExpectation_PacketInExpectation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlPlaneExpectation_PacketInExpectation.Merge(m, src)
}
func (m *ControlPlaneExpectation_PacketInExpectation) XXX_Size() int {
	return xxx_messageInfo_ControlPlaneExpectation_PacketInExpectation.Size(m)
}
func (m *ControlPlaneExpectation_PacketInExpectation) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlPlaneExpectation_PacketInExpectation.DiscardUnknown(m)
}

var xxx_messageInfo_ControlPlaneExpectation_PacketInExpectation proto.InternalMessageInfo

func (m *ControlPlaneExpectation_PacketInExpectation) GetP4PacketIn() *v1.PacketIn {
	if m != nil {
		return m.P4PacketIn
	}
	return nil
}

func (m *ControlPlaneExpectation_PacketInExpectation) GetNumOfPackets() int64 {
	if m != nil {
		return m.NumOfPackets
	}
	return 0
}

func (m *ControlPlaneExpectation_PacketInExpectation) GetMinSpeedBps() uint64 {
	if m != nil {
		return m.MinSpeedBps
	}
	return 0
}

func (m *ControlPlaneExpectation_PacketInExpectation) GetMaxSpeedBps() uint64 {
	if m != nil {
		return m.MaxSpeedBps
	}
	return 0
}

func (m *ControlPlaneExpectation_PacketInExpectation) GetCos() int32 {
	if m != nil {
		return m.Cos
	}
	return 0
}

type ControlPlaneExpectation_PipelineConfigExpectation struct {
	P4GetPipelineConfigRequest  *v1.GetForwardingPipelineConfigRequest  `protobuf:"bytes,1,opt,name=p4_get_pipeline_config_request,json=p4GetPipelineConfigRequest,proto3" json:"p4_get_pipeline_config_request,omitempty"`
	P4GetPipelineConfigResponse *v1.GetForwardingPipelineConfigResponse `protobuf:"bytes,2,opt,name=p4_get_pipeline_config_response,json=p4GetPipelineConfigResponse,proto3" json:"p4_get_pipeline_config_response,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                                `json:"-"`
	XXX_unrecognized            []byte                                  `json:"-"`
	XXX_sizecache               int32                                   `json:"-"`
}

func (m *ControlPlaneExpectation_PipelineConfigExpectation) Reset() {
	*m = ControlPlaneExpectation_PipelineConfigExpectation{}
}
func (m *ControlPlaneExpectation_PipelineConfigExpectation) String() string {
	return proto.CompactTextString(m)
}
func (*ControlPlaneExpectation_PipelineConfigExpectation) ProtoMessage() {}
func (*ControlPlaneExpectation_PipelineConfigExpectation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{1, 2}
}

func (m *ControlPlaneExpectation_PipelineConfigExpectation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlPlaneExpectation_PipelineConfigExpectation.Unmarshal(m, b)
}
func (m *ControlPlaneExpectation_PipelineConfigExpectation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlPlaneExpectation_PipelineConfigExpectation.Marshal(b, m, deterministic)
}
func (m *ControlPlaneExpectation_PipelineConfigExpectation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlPlaneExpectation_PipelineConfigExpectation.Merge(m, src)
}
func (m *ControlPlaneExpectation_PipelineConfigExpectation) XXX_Size() int {
	return xxx_messageInfo_ControlPlaneExpectation_PipelineConfigExpectation.Size(m)
}
func (m *ControlPlaneExpectation_PipelineConfigExpectation) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlPlaneExpectation_PipelineConfigExpectation.DiscardUnknown(m)
}

var xxx_messageInfo_ControlPlaneExpectation_PipelineConfigExpectation proto.InternalMessageInfo

func (m *ControlPlaneExpectation_PipelineConfigExpectation) GetP4GetPipelineConfigRequest() *v1.GetForwardingPipelineConfigRequest {
	if m != nil {
		return m.P4GetPipelineConfigRequest
	}
	return nil
}

func (m *ControlPlaneExpectation_PipelineConfigExpectation) GetP4GetPipelineConfigResponse() *v1.GetForwardingPipelineConfigResponse {
	if m != nil {
		return m.P4GetPipelineConfigResponse
	}
	return nil
}

type DataPlaneStimulus struct {
	// Types that are valid to be assigned to Stimuli:
	//	*DataPlaneStimulus_TrafficStimulus_
	Stimuli              isDataPlaneStimulus_Stimuli `protobuf_oneof:"stimuli"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *DataPlaneStimulus) Reset()         { *m = DataPlaneStimulus{} }
func (m *DataPlaneStimulus) String() string { return proto.CompactTextString(m) }
func (*DataPlaneStimulus) ProtoMessage()    {}
func (*DataPlaneStimulus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{2}
}

func (m *DataPlaneStimulus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPlaneStimulus.Unmarshal(m, b)
}
func (m *DataPlaneStimulus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPlaneStimulus.Marshal(b, m, deterministic)
}
func (m *DataPlaneStimulus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPlaneStimulus.Merge(m, src)
}
func (m *DataPlaneStimulus) XXX_Size() int {
	return xxx_messageInfo_DataPlaneStimulus.Size(m)
}
func (m *DataPlaneStimulus) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPlaneStimulus.DiscardUnknown(m)
}

var xxx_messageInfo_DataPlaneStimulus proto.InternalMessageInfo

type isDataPlaneStimulus_Stimuli interface {
	isDataPlaneStimulus_Stimuli()
}

type DataPlaneStimulus_TrafficStimulus_ struct {
	TrafficStimulus *DataPlaneStimulus_TrafficStimulus `protobuf:"bytes,1,opt,name=traffic_stimulus,json=trafficStimulus,proto3,oneof"`
}

func (*DataPlaneStimulus_TrafficStimulus_) isDataPlaneStimulus_Stimuli() {}

func (m *DataPlaneStimulus) GetStimuli() isDataPlaneStimulus_Stimuli {
	if m != nil {
		return m.Stimuli
	}
	return nil
}

func (m *DataPlaneStimulus) GetTrafficStimulus() *DataPlaneStimulus_TrafficStimulus {
	if x, ok := m.GetStimuli().(*DataPlaneStimulus_TrafficStimulus_); ok {
		return x.TrafficStimulus
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DataPlaneStimulus) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DataPlaneStimulus_TrafficStimulus_)(nil),
	}
}

// Defines the external data plane traffic stimulus. To be generated by a
// traffic gen and sent to a port (ingress to switch). There will be one flow
// per port.
type DataPlaneStimulus_TrafficStimulus struct {
	// The ID of the node/device (defined in the config pushed beforehand via
	// gNMI).
	DeviceId uint64 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// SDN port/trunk number (defined in the config pushed beforehand via gNMI).
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// The packets to be sent to the port one after another. The order of the
	// repeated field defines the order in which the packets will be sent to the
	// port by the traffic gen.
	Packets []*DataPlaneStimulus_TrafficStimulus_Packet `protobuf:"bytes,3,rep,name=packets,proto3" json:"packets,omitempty"`
	// The # of times traffic generators sends all the packet (defined by
	// "packets" above) to the port. A negative number refers to "continuous
	// mode".
	NumOfReplicas int64 `protobuf:"varint,4,opt,name=num_of_replicas,json=numOfReplicas,proto3" json:"num_of_replicas,omitempty"`
	// "min" and "max" speed at which the packets will be generated by traffic
	// gen. Defines an interval for the acceptable rate for the generated
	// packets.
	MinSpeedBps uint64 `protobuf:"varint,5,opt,name=min_speed_bps,json=minSpeedBps,proto3" json:"min_speed_bps,omitempty"`
	MaxSpeedBps uint64 `protobuf:"varint,6,opt,name=max_speed_bps,json=maxSpeedBps,proto3" json:"max_speed_bps,omitempty"`
	// class of service for the generated packet.
	Cos                  int32    `protobuf:"varint,7,opt,name=cos,proto3" json:"cos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataPlaneStimulus_TrafficStimulus) Reset()         { *m = DataPlaneStimulus_TrafficStimulus{} }
func (m *DataPlaneStimulus_TrafficStimulus) String() string { return proto.CompactTextString(m) }
func (*DataPlaneStimulus_TrafficStimulus) ProtoMessage()    {}
func (*DataPlaneStimulus_TrafficStimulus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{2, 0}
}

func (m *DataPlaneStimulus_TrafficStimulus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPlaneStimulus_TrafficStimulus.Unmarshal(m, b)
}
func (m *DataPlaneStimulus_TrafficStimulus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPlaneStimulus_TrafficStimulus.Marshal(b, m, deterministic)
}
func (m *DataPlaneStimulus_TrafficStimulus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPlaneStimulus_TrafficStimulus.Merge(m, src)
}
func (m *DataPlaneStimulus_TrafficStimulus) XXX_Size() int {
	return xxx_messageInfo_DataPlaneStimulus_TrafficStimulus.Size(m)
}
func (m *DataPlaneStimulus_TrafficStimulus) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPlaneStimulus_TrafficStimulus.DiscardUnknown(m)
}

var xxx_messageInfo_DataPlaneStimulus_TrafficStimulus proto.InternalMessageInfo

func (m *DataPlaneStimulus_TrafficStimulus) GetDeviceId() uint64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *DataPlaneStimulus_TrafficStimulus) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *DataPlaneStimulus_TrafficStimulus) GetPackets() []*DataPlaneStimulus_TrafficStimulus_Packet {
	if m != nil {
		return m.Packets
	}
	return nil
}

func (m *DataPlaneStimulus_TrafficStimulus) GetNumOfReplicas() int64 {
	if m != nil {
		return m.NumOfReplicas
	}
	return 0
}

func (m *DataPlaneStimulus_TrafficStimulus) GetMinSpeedBps() uint64 {
	if m != nil {
		return m.MinSpeedBps
	}
	return 0
}

func (m *DataPlaneStimulus_TrafficStimulus) GetMaxSpeedBps() uint64 {
	if m != nil {
		return m.MaxSpeedBps
	}
	return 0
}

func (m *DataPlaneStimulus_TrafficStimulus) GetCos() int32 {
	if m != nil {
		return m.Cos
	}
	return 0
}

type DataPlaneStimulus_TrafficStimulus_Packet struct {
	// raw packet
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataPlaneStimulus_TrafficStimulus_Packet) Reset() {
	*m = DataPlaneStimulus_TrafficStimulus_Packet{}
}
func (m *DataPlaneStimulus_TrafficStimulus_Packet) String() string { return proto.CompactTextString(m) }
func (*DataPlaneStimulus_TrafficStimulus_Packet) ProtoMessage()    {}
func (*DataPlaneStimulus_TrafficStimulus_Packet) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{2, 0, 0}
}

func (m *DataPlaneStimulus_TrafficStimulus_Packet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPlaneStimulus_TrafficStimulus_Packet.Unmarshal(m, b)
}
func (m *DataPlaneStimulus_TrafficStimulus_Packet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPlaneStimulus_TrafficStimulus_Packet.Marshal(b, m, deterministic)
}
func (m *DataPlaneStimulus_TrafficStimulus_Packet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPlaneStimulus_TrafficStimulus_Packet.Merge(m, src)
}
func (m *DataPlaneStimulus_TrafficStimulus_Packet) XXX_Size() int {
	return xxx_messageInfo_DataPlaneStimulus_TrafficStimulus_Packet.Size(m)
}
func (m *DataPlaneStimulus_TrafficStimulus_Packet) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPlaneStimulus_TrafficStimulus_Packet.DiscardUnknown(m)
}

var xxx_messageInfo_DataPlaneStimulus_TrafficStimulus_Packet proto.InternalMessageInfo

func (m *DataPlaneStimulus_TrafficStimulus_Packet) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type DataPlaneExpectation struct {
	// Types that are valid to be assigned to Expectations:
	//	*DataPlaneExpectation_TrafficExpectation_
	Expectations         isDataPlaneExpectation_Expectations `protobuf_oneof:"expectations"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *DataPlaneExpectation) Reset()         { *m = DataPlaneExpectation{} }
func (m *DataPlaneExpectation) String() string { return proto.CompactTextString(m) }
func (*DataPlaneExpectation) ProtoMessage()    {}
func (*DataPlaneExpectation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{3}
}

func (m *DataPlaneExpectation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPlaneExpectation.Unmarshal(m, b)
}
func (m *DataPlaneExpectation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPlaneExpectation.Marshal(b, m, deterministic)
}
func (m *DataPlaneExpectation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPlaneExpectation.Merge(m, src)
}
func (m *DataPlaneExpectation) XXX_Size() int {
	return xxx_messageInfo_DataPlaneExpectation.Size(m)
}
func (m *DataPlaneExpectation) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPlaneExpectation.DiscardUnknown(m)
}

var xxx_messageInfo_DataPlaneExpectation proto.InternalMessageInfo

type isDataPlaneExpectation_Expectations interface {
	isDataPlaneExpectation_Expectations()
}

type DataPlaneExpectation_TrafficExpectation_ struct {
	TrafficExpectation *DataPlaneExpectation_TrafficExpectation `protobuf:"bytes,1,opt,name=traffic_expectation,json=trafficExpectation,proto3,oneof"`
}

func (*DataPlaneExpectation_TrafficExpectation_) isDataPlaneExpectation_Expectations() {}

func (m *DataPlaneExpectation) GetExpectations() isDataPlaneExpectation_Expectations {
	if m != nil {
		return m.Expectations
	}
	return nil
}

func (m *DataPlaneExpectation) GetTrafficExpectation() *DataPlaneExpectation_TrafficExpectation {
	if x, ok := m.GetExpectations().(*DataPlaneExpectation_TrafficExpectation_); ok {
		return x.TrafficExpectation
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DataPlaneExpectation) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DataPlaneExpectation_TrafficExpectation_)(nil),
	}
}

type DataPlaneExpectation_TrafficExpectation struct {
	// The ID of the node/device (defined in the config pushed beforehand via
	// gNMI).
	DeviceId uint64 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// Output packet may come out of one of these ports
	Ports []uint32 `protobuf:"varint,2,rep,packed,name=ports,proto3" json:"ports,omitempty"`
	// The packets to come out of the port(s) one after another. The order of
	// the repeated field defines the order in which the packets will be
	// egressed.
	Packets []*DataPlaneExpectation_TrafficExpectation_Packet `protobuf:"bytes,3,rep,name=packets,proto3" json:"packets,omitempty"`
	// The # of times all the packet (defined by "packets" above) will be sent
	// out of the port(s). A negative number refers to "continuous mode".
	NumOfReplicas int64 `protobuf:"varint,4,opt,name=num_of_replicas,json=numOfReplicas,proto3" json:"num_of_replicas,omitempty"`
	// Speed at which the packets will be sent out of the port(s). Defines an
	// interval for the acceptable rate for the received packets. If min and max
	// speeds are the same and positive, the measured speed will be strictly
	// checked to be the same as the value specified.
	MinSpeedBps uint64 `protobuf:"varint,5,opt,name=min_speed_bps,json=minSpeedBps,proto3" json:"min_speed_bps,omitempty"`
	MaxSpeedBps uint64 `protobuf:"varint,6,opt,name=max_speed_bps,json=maxSpeedBps,proto3" json:"max_speed_bps,omitempty"`
	// Packet distribution. Dont care if there is one egress port. Used to test
	// hashing.
	Distribution *DataPlaneExpectation_TrafficExpectation_Distribution `protobuf:"bytes,7,opt,name=distribution,proto3" json:"distribution,omitempty"`
	// class of service of the packets.
	Cos                  int32    `protobuf:"varint,8,opt,name=cos,proto3" json:"cos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataPlaneExpectation_TrafficExpectation) Reset() {
	*m = DataPlaneExpectation_TrafficExpectation{}
}
func (m *DataPlaneExpectation_TrafficExpectation) String() string { return proto.CompactTextString(m) }
func (*DataPlaneExpectation_TrafficExpectation) ProtoMessage()    {}
func (*DataPlaneExpectation_TrafficExpectation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{3, 0}
}

func (m *DataPlaneExpectation_TrafficExpectation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPlaneExpectation_TrafficExpectation.Unmarshal(m, b)
}
func (m *DataPlaneExpectation_TrafficExpectation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPlaneExpectation_TrafficExpectation.Marshal(b, m, deterministic)
}
func (m *DataPlaneExpectation_TrafficExpectation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPlaneExpectation_TrafficExpectation.Merge(m, src)
}
func (m *DataPlaneExpectation_TrafficExpectation) XXX_Size() int {
	return xxx_messageInfo_DataPlaneExpectation_TrafficExpectation.Size(m)
}
func (m *DataPlaneExpectation_TrafficExpectation) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPlaneExpectation_TrafficExpectation.DiscardUnknown(m)
}

var xxx_messageInfo_DataPlaneExpectation_TrafficExpectation proto.InternalMessageInfo

func (m *DataPlaneExpectation_TrafficExpectation) GetDeviceId() uint64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *DataPlaneExpectation_TrafficExpectation) GetPorts() []uint32 {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *DataPlaneExpectation_TrafficExpectation) GetPackets() []*DataPlaneExpectation_TrafficExpectation_Packet {
	if m != nil {
		return m.Packets
	}
	return nil
}

func (m *DataPlaneExpectation_TrafficExpectation) GetNumOfReplicas() int64 {
	if m != nil {
		return m.NumOfReplicas
	}
	return 0
}

func (m *DataPlaneExpectation_TrafficExpectation) GetMinSpeedBps() uint64 {
	if m != nil {
		return m.MinSpeedBps
	}
	return 0
}

func (m *DataPlaneExpectation_TrafficExpectation) GetMaxSpeedBps() uint64 {
	if m != nil {
		return m.MaxSpeedBps
	}
	return 0
}

func (m *DataPlaneExpectation_TrafficExpectation) GetDistribution() *DataPlaneExpectation_TrafficExpectation_Distribution {
	if m != nil {
		return m.Distribution
	}
	return nil
}

func (m *DataPlaneExpectation_TrafficExpectation) GetCos() int32 {
	if m != nil {
		return m.Cos
	}
	return 0
}

// Define packet out distribution in case packets are sent to an ECMP group
// ( i.e. more than one output ports are given).
type DataPlaneExpectation_TrafficExpectation_Distribution struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataPlaneExpectation_TrafficExpectation_Distribution) Reset() {
	*m = DataPlaneExpectation_TrafficExpectation_Distribution{}
}
func (m *DataPlaneExpectation_TrafficExpectation_Distribution) String() string {
	return proto.CompactTextString(m)
}
func (*DataPlaneExpectation_TrafficExpectation_Distribution) ProtoMessage() {}
func (*DataPlaneExpectation_TrafficExpectation_Distribution) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{3, 0, 0}
}

func (m *DataPlaneExpectation_TrafficExpectation_Distribution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPlaneExpectation_TrafficExpectation_Distribution.Unmarshal(m, b)
}
func (m *DataPlaneExpectation_TrafficExpectation_Distribution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPlaneExpectation_TrafficExpectation_Distribution.Marshal(b, m, deterministic)
}
func (m *DataPlaneExpectation_TrafficExpectation_Distribution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPlaneExpectation_TrafficExpectation_Distribution.Merge(m, src)
}
func (m *DataPlaneExpectation_TrafficExpectation_Distribution) XXX_Size() int {
	return xxx_messageInfo_DataPlaneExpectation_TrafficExpectation_Distribution.Size(m)
}
func (m *DataPlaneExpectation_TrafficExpectation_Distribution) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPlaneExpectation_TrafficExpectation_Distribution.DiscardUnknown(m)
}

var xxx_messageInfo_DataPlaneExpectation_TrafficExpectation_Distribution proto.InternalMessageInfo

type DataPlaneExpectation_TrafficExpectation_Packet struct {
	// raw packet
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataPlaneExpectation_TrafficExpectation_Packet) Reset() {
	*m = DataPlaneExpectation_TrafficExpectation_Packet{}
}
func (m *DataPlaneExpectation_TrafficExpectation_Packet) String() string {
	return proto.CompactTextString(m)
}
func (*DataPlaneExpectation_TrafficExpectation_Packet) ProtoMessage() {}
func (*DataPlaneExpectation_TrafficExpectation_Packet) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{3, 0, 1}
}

func (m *DataPlaneExpectation_TrafficExpectation_Packet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPlaneExpectation_TrafficExpectation_Packet.Unmarshal(m, b)
}
func (m *DataPlaneExpectation_TrafficExpectation_Packet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPlaneExpectation_TrafficExpectation_Packet.Marshal(b, m, deterministic)
}
func (m *DataPlaneExpectation_TrafficExpectation_Packet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPlaneExpectation_TrafficExpectation_Packet.Merge(m, src)
}
func (m *DataPlaneExpectation_TrafficExpectation_Packet) XXX_Size() int {
	return xxx_messageInfo_DataPlaneExpectation_TrafficExpectation_Packet.Size(m)
}
func (m *DataPlaneExpectation_TrafficExpectation_Packet) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPlaneExpectation_TrafficExpectation_Packet.DiscardUnknown(m)
}

var xxx_messageInfo_DataPlaneExpectation_TrafficExpectation_Packet proto.InternalMessageInfo

func (m *DataPlaneExpectation_TrafficExpectation_Packet) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

// Config push, port speed change, port admin state change, trunk pruning.
type ConfigOperation struct {
	GnmiSetRequest       *gnmi.SetRequest  `protobuf:"bytes,1,opt,name=gnmi_set_request,json=gnmiSetRequest,proto3" json:"gnmi_set_request,omitempty"`
	GnmiSetResponse      *gnmi.SetResponse `protobuf:"bytes,2,opt,name=gnmi_set_response,json=gnmiSetResponse,proto3" json:"gnmi_set_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ConfigOperation) Reset()         { *m = ConfigOperation{} }
func (m *ConfigOperation) String() string { return proto.CompactTextString(m) }
func (*ConfigOperation) ProtoMessage()    {}
func (*ConfigOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{4}
}

func (m *ConfigOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigOperation.Unmarshal(m, b)
}
func (m *ConfigOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigOperation.Marshal(b, m, deterministic)
}
func (m *ConfigOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigOperation.Merge(m, src)
}
func (m *ConfigOperation) XXX_Size() int {
	return xxx_messageInfo_ConfigOperation.Size(m)
}
func (m *ConfigOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigOperation.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigOperation proto.InternalMessageInfo

func (m *ConfigOperation) GetGnmiSetRequest() *gnmi.SetRequest {
	if m != nil {
		return m.GnmiSetRequest
	}
	return nil
}

func (m *ConfigOperation) GetGnmiSetResponse() *gnmi.SetResponse {
	if m != nil {
		return m.GnmiSetResponse
	}
	return nil
}

// Signal to a possibly external device to change the state of a port (aka
// interface). Note that this is different from changing the admin state of a
// port which is done via Set RPC.
type PortStimulus struct {
	Interface            *gnmi.Path         `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	State                PortStimulus_State `protobuf:"varint,2,opt,name=state,proto3,enum=stratum.testing.PortStimulus_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PortStimulus) Reset()         { *m = PortStimulus{} }
func (m *PortStimulus) String() string { return proto.CompactTextString(m) }
func (*PortStimulus) ProtoMessage()    {}
func (*PortStimulus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{5}
}

func (m *PortStimulus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortStimulus.Unmarshal(m, b)
}
func (m *PortStimulus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortStimulus.Marshal(b, m, deterministic)
}
func (m *PortStimulus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortStimulus.Merge(m, src)
}
func (m *PortStimulus) XXX_Size() int {
	return xxx_messageInfo_PortStimulus.Size(m)
}
func (m *PortStimulus) XXX_DiscardUnknown() {
	xxx_messageInfo_PortStimulus.DiscardUnknown(m)
}

var xxx_messageInfo_PortStimulus proto.InternalMessageInfo

func (m *PortStimulus) GetInterface() *gnmi.Path {
	if m != nil {
		return m.Interface
	}
	return nil
}

func (m *PortStimulus) GetState() PortStimulus_State {
	if m != nil {
		return m.State
	}
	return PortStimulus_STATE_UNKNOWN
}

// Signal to a possibly external device to simulate an alarm situation.
type AlarmStimulus struct {
	Alarm                *gnmi.Path `protobuf:"bytes,1,opt,name=alarm,proto3" json:"alarm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AlarmStimulus) Reset()         { *m = AlarmStimulus{} }
func (m *AlarmStimulus) String() string { return proto.CompactTextString(m) }
func (*AlarmStimulus) ProtoMessage()    {}
func (*AlarmStimulus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{6}
}

func (m *AlarmStimulus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlarmStimulus.Unmarshal(m, b)
}
func (m *AlarmStimulus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlarmStimulus.Marshal(b, m, deterministic)
}
func (m *AlarmStimulus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlarmStimulus.Merge(m, src)
}
func (m *AlarmStimulus) XXX_Size() int {
	return xxx_messageInfo_AlarmStimulus.Size(m)
}
func (m *AlarmStimulus) XXX_DiscardUnknown() {
	xxx_messageInfo_AlarmStimulus.DiscardUnknown(m)
}

var xxx_messageInfo_AlarmStimulus proto.InternalMessageInfo

func (m *AlarmStimulus) GetAlarm() *gnmi.Path {
	if m != nil {
		return m.Alarm
	}
	return nil
}

type ConfigExpectation struct {
	GnmiGetRequest       *gnmi.GetRequest  `protobuf:"bytes,1,opt,name=gnmi_get_request,json=gnmiGetRequest,proto3" json:"gnmi_get_request,omitempty"`
	GnmiGetResponse      *gnmi.GetResponse `protobuf:"bytes,2,opt,name=gnmi_get_response,json=gnmiGetResponse,proto3" json:"gnmi_get_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ConfigExpectation) Reset()         { *m = ConfigExpectation{} }
func (m *ConfigExpectation) String() string { return proto.CompactTextString(m) }
func (*ConfigExpectation) ProtoMessage()    {}
func (*ConfigExpectation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{7}
}

func (m *ConfigExpectation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigExpectation.Unmarshal(m, b)
}
func (m *ConfigExpectation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigExpectation.Marshal(b, m, deterministic)
}
func (m *ConfigExpectation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigExpectation.Merge(m, src)
}
func (m *ConfigExpectation) XXX_Size() int {
	return xxx_messageInfo_ConfigExpectation.Size(m)
}
func (m *ConfigExpectation) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigExpectation.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigExpectation proto.InternalMessageInfo

func (m *ConfigExpectation) GetGnmiGetRequest() *gnmi.GetRequest {
	if m != nil {
		return m.GnmiGetRequest
	}
	return nil
}

func (m *ConfigExpectation) GetGnmiGetResponse() *gnmi.GetResponse {
	if m != nil {
		return m.GnmiGetResponse
	}
	return nil
}

type TelemetryExpectation struct {
	Requirement *TelemetryExpectation_Requirement `protobuf:"bytes,1,opt,name=requirement,proto3" json:"requirement,omitempty"`
	// The single gNMI write request to send over the stream.
	GnmiSubscribeRequest *gnmi.SubscribeRequest `protobuf:"bytes,2,opt,name=gnmi_subscribe_request,json=gnmiSubscribeRequest,proto3" json:"gnmi_subscribe_request,omitempty"`
	// All the operations and/or stimuli to be run "after" the stream is created
	// and request has been sent. Optional. Not all the TVs will have this field
	// populated. Also, note that we can assume one can run "any" action here
	// (even a config push to packet I/O).
	ActionGroup *ActionGroup `protobuf:"bytes,3,opt,name=action_group,json=actionGroup,proto3" json:"action_group,omitempty"`
	// The minimum set of SubscribeResponse to be read from the stream "as soon
	// as it is created (not after sending the request). The order should match
	// the order of the messages read from the channel. As soon as these
	// protos are read from the channel within the specified timeout, we close
	// the channel set the test as PASSED. If timeout is reached before reading
	// all these messages, or if there is any other issue while reading the
	// messages, we still close the channel but set the test as FAILED.
	GnmiSubscribeResponse []*gnmi.SubscribeResponse `protobuf:"bytes,4,rep,name=gnmi_subscribe_response,json=gnmiSubscribeResponse,proto3" json:"gnmi_subscribe_response,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                  `json:"-"`
	XXX_unrecognized      []byte                    `json:"-"`
	XXX_sizecache         int32                     `json:"-"`
}

func (m *TelemetryExpectation) Reset()         { *m = TelemetryExpectation{} }
func (m *TelemetryExpectation) String() string { return proto.CompactTextString(m) }
func (*TelemetryExpectation) ProtoMessage()    {}
func (*TelemetryExpectation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{8}
}

func (m *TelemetryExpectation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelemetryExpectation.Unmarshal(m, b)
}
func (m *TelemetryExpectation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelemetryExpectation.Marshal(b, m, deterministic)
}
func (m *TelemetryExpectation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemetryExpectation.Merge(m, src)
}
func (m *TelemetryExpectation) XXX_Size() int {
	return xxx_messageInfo_TelemetryExpectation.Size(m)
}
func (m *TelemetryExpectation) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemetryExpectation.DiscardUnknown(m)
}

var xxx_messageInfo_TelemetryExpectation proto.InternalMessageInfo

func (m *TelemetryExpectation) GetRequirement() *TelemetryExpectation_Requirement {
	if m != nil {
		return m.Requirement
	}
	return nil
}

func (m *TelemetryExpectation) GetGnmiSubscribeRequest() *gnmi.SubscribeRequest {
	if m != nil {
		return m.GnmiSubscribeRequest
	}
	return nil
}

func (m *TelemetryExpectation) GetActionGroup() *ActionGroup {
	if m != nil {
		return m.ActionGroup
	}
	return nil
}

func (m *TelemetryExpectation) GetGnmiSubscribeResponse() []*gnmi.SubscribeResponse {
	if m != nil {
		return m.GnmiSubscribeResponse
	}
	return nil
}

// As part of each telemetry expectation, we open a "new" subscription
// channel, send one SubscribeRequest, optionally do some actions (operations
// or stimuli), and verify the SubscribeResponse messages we read from the
// stream. Note that TelemetryExpectation is the only expectation message that
// includes the actions as part of it, as it needs to specify the actions done
// after the streaming channel is created (actions before channel creation are
// already part of an external ActionGroup message, no need to put them here).
// The SubscribeResponse messages are read using a different thread, that is
// spawned as soon as the stream is opened, before sending any request.
// Anything read from the channel is saved with exact timestamp for later
// verification. We clearly specify what needs to be read from the channel as
// part of the test. We also make sure all the requirements (e.g. timing
// requirements) are specified as well. Note that even in case of streaming a
// leaf value with certain frequency, we can limit the number of protos read
// from the channel within a certain period of time. Here is an example:
// -  Port status test over gNMI: Specify a timeout for the port event,
//    specify a series of port UP/DOWN stimulus (using PortStimulus above) in
//    action_group, in gnmi_subscribe_request specify that you want to
//    subscribe to a specific interface port state leaf, and finally specify
//    the series of messages you expect to receive over the stream in
//    gnmi_subscribe_response. The test client will create a stream channel
//    and start listening to messages in a separate thread. Sends the requests
//    over the stream and logs the responses. If it detects the port event
//    sequence exactly the way it was described within the time out, the test
//    passes. Otherwise it fails.
type TelemetryExpectation_Requirement struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TelemetryExpectation_Requirement) Reset()         { *m = TelemetryExpectation_Requirement{} }
func (m *TelemetryExpectation_Requirement) String() string { return proto.CompactTextString(m) }
func (*TelemetryExpectation_Requirement) ProtoMessage()    {}
func (*TelemetryExpectation_Requirement) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{8, 0}
}

func (m *TelemetryExpectation_Requirement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelemetryExpectation_Requirement.Unmarshal(m, b)
}
func (m *TelemetryExpectation_Requirement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelemetryExpectation_Requirement.Marshal(b, m, deterministic)
}
func (m *TelemetryExpectation_Requirement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemetryExpectation_Requirement.Merge(m, src)
}
func (m *TelemetryExpectation_Requirement) XXX_Size() int {
	return xxx_messageInfo_TelemetryExpectation_Requirement.Size(m)
}
func (m *TelemetryExpectation_Requirement) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemetryExpectation_Requirement.DiscardUnknown(m)
}

var xxx_messageInfo_TelemetryExpectation_Requirement proto.InternalMessageInfo

type SecurityOperation struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecurityOperation) Reset()         { *m = SecurityOperation{} }
func (m *SecurityOperation) String() string { return proto.CompactTextString(m) }
func (*SecurityOperation) ProtoMessage()    {}
func (*SecurityOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{9}
}

func (m *SecurityOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityOperation.Unmarshal(m, b)
}
func (m *SecurityOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityOperation.Marshal(b, m, deterministic)
}
func (m *SecurityOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityOperation.Merge(m, src)
}
func (m *SecurityOperation) XXX_Size() int {
	return xxx_messageInfo_SecurityOperation.Size(m)
}
func (m *SecurityOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityOperation.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityOperation proto.InternalMessageInfo

type DiagOperation struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiagOperation) Reset()         { *m = DiagOperation{} }
func (m *DiagOperation) String() string { return proto.CompactTextString(m) }
func (*DiagOperation) ProtoMessage()    {}
func (*DiagOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{10}
}

func (m *DiagOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiagOperation.Unmarshal(m, b)
}
func (m *DiagOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiagOperation.Marshal(b, m, deterministic)
}
func (m *DiagOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiagOperation.Merge(m, src)
}
func (m *DiagOperation) XXX_Size() int {
	return xxx_messageInfo_DiagOperation.Size(m)
}
func (m *DiagOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_DiagOperation.DiscardUnknown(m)
}

var xxx_messageInfo_DiagOperation proto.InternalMessageInfo

type SystemOperation struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SystemOperation) Reset()         { *m = SystemOperation{} }
func (m *SystemOperation) String() string { return proto.CompactTextString(m) }
func (*SystemOperation) ProtoMessage()    {}
func (*SystemOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{11}
}

func (m *SystemOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemOperation.Unmarshal(m, b)
}
func (m *SystemOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemOperation.Marshal(b, m, deterministic)
}
func (m *SystemOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemOperation.Merge(m, src)
}
func (m *SystemOperation) XXX_Size() int {
	return xxx_messageInfo_SystemOperation.Size(m)
}
func (m *SystemOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemOperation.DiscardUnknown(m)
}

var xxx_messageInfo_SystemOperation proto.InternalMessageInfo

type FileOperation struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileOperation) Reset()         { *m = FileOperation{} }
func (m *FileOperation) String() string { return proto.CompactTextString(m) }
func (*FileOperation) ProtoMessage()    {}
func (*FileOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{12}
}

func (m *FileOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileOperation.Unmarshal(m, b)
}
func (m *FileOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileOperation.Marshal(b, m, deterministic)
}
func (m *FileOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileOperation.Merge(m, src)
}
func (m *FileOperation) XXX_Size() int {
	return xxx_messageInfo_FileOperation.Size(m)
}
func (m *FileOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_FileOperation.DiscardUnknown(m)
}

var xxx_messageInfo_FileOperation proto.InternalMessageInfo

type ManagementOperation struct {
	// Types that are valid to be assigned to Flows:
	//	*ManagementOperation_SecurityOperation
	//	*ManagementOperation_DiagOperation
	//	*ManagementOperation_SystemOperation
	//	*ManagementOperation_FileOperation
	Flows                isManagementOperation_Flows `protobuf_oneof:"flows"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ManagementOperation) Reset()         { *m = ManagementOperation{} }
func (m *ManagementOperation) String() string { return proto.CompactTextString(m) }
func (*ManagementOperation) ProtoMessage()    {}
func (*ManagementOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{13}
}

func (m *ManagementOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManagementOperation.Unmarshal(m, b)
}
func (m *ManagementOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManagementOperation.Marshal(b, m, deterministic)
}
func (m *ManagementOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagementOperation.Merge(m, src)
}
func (m *ManagementOperation) XXX_Size() int {
	return xxx_messageInfo_ManagementOperation.Size(m)
}
func (m *ManagementOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagementOperation.DiscardUnknown(m)
}

var xxx_messageInfo_ManagementOperation proto.InternalMessageInfo

type isManagementOperation_Flows interface {
	isManagementOperation_Flows()
}

type ManagementOperation_SecurityOperation struct {
	SecurityOperation *SecurityOperation `protobuf:"bytes,1,opt,name=security_operation,json=securityOperation,proto3,oneof"`
}

type ManagementOperation_DiagOperation struct {
	DiagOperation *DiagOperation `protobuf:"bytes,2,opt,name=diag_operation,json=diagOperation,proto3,oneof"`
}

type ManagementOperation_SystemOperation struct {
	SystemOperation *SystemOperation `protobuf:"bytes,3,opt,name=system_operation,json=systemOperation,proto3,oneof"`
}

type ManagementOperation_FileOperation struct {
	FileOperation *FileOperation `protobuf:"bytes,4,opt,name=file_operation,json=fileOperation,proto3,oneof"`
}

func (*ManagementOperation_SecurityOperation) isManagementOperation_Flows() {}

func (*ManagementOperation_DiagOperation) isManagementOperation_Flows() {}

func (*ManagementOperation_SystemOperation) isManagementOperation_Flows() {}

func (*ManagementOperation_FileOperation) isManagementOperation_Flows() {}

func (m *ManagementOperation) GetFlows() isManagementOperation_Flows {
	if m != nil {
		return m.Flows
	}
	return nil
}

func (m *ManagementOperation) GetSecurityOperation() *SecurityOperation {
	if x, ok := m.GetFlows().(*ManagementOperation_SecurityOperation); ok {
		return x.SecurityOperation
	}
	return nil
}

func (m *ManagementOperation) GetDiagOperation() *DiagOperation {
	if x, ok := m.GetFlows().(*ManagementOperation_DiagOperation); ok {
		return x.DiagOperation
	}
	return nil
}

func (m *ManagementOperation) GetSystemOperation() *SystemOperation {
	if x, ok := m.GetFlows().(*ManagementOperation_SystemOperation); ok {
		return x.SystemOperation
	}
	return nil
}

func (m *ManagementOperation) GetFileOperation() *FileOperation {
	if x, ok := m.GetFlows().(*ManagementOperation_FileOperation); ok {
		return x.FileOperation
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ManagementOperation) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ManagementOperation_SecurityOperation)(nil),
		(*ManagementOperation_DiagOperation)(nil),
		(*ManagementOperation_SystemOperation)(nil),
		(*ManagementOperation_FileOperation)(nil),
	}
}

// An action is either an operation or an external stimulus that affects the
// SUT.
type Action struct {
	Requirement *Action_Requirement `protobuf:"bytes,1,opt,name=requirement,proto3" json:"requirement,omitempty"`
	// Types that are valid to be assigned to Actions:
	//	*Action_ConfigOperation
	//	*Action_ControlPlaneOperation
	//	*Action_DataPlaneStimulus
	//	*Action_ManagementOperation
	//	*Action_PortStimulus
	//	*Action_AlarmStimulus
	Actions              isAction_Actions `protobuf_oneof:"actions"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{14}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetRequirement() *Action_Requirement {
	if m != nil {
		return m.Requirement
	}
	return nil
}

type isAction_Actions interface {
	isAction_Actions()
}

type Action_ConfigOperation struct {
	ConfigOperation *ConfigOperation `protobuf:"bytes,2,opt,name=config_operation,json=configOperation,proto3,oneof"`
}

type Action_ControlPlaneOperation struct {
	ControlPlaneOperation *ControlPlaneOperation `protobuf:"bytes,3,opt,name=control_plane_operation,json=controlPlaneOperation,proto3,oneof"`
}

type Action_DataPlaneStimulus struct {
	DataPlaneStimulus *DataPlaneStimulus `protobuf:"bytes,4,opt,name=data_plane_stimulus,json=dataPlaneStimulus,proto3,oneof"`
}

type Action_ManagementOperation struct {
	ManagementOperation *ManagementOperation `protobuf:"bytes,5,opt,name=management_operation,json=managementOperation,proto3,oneof"`
}

type Action_PortStimulus struct {
	PortStimulus *PortStimulus `protobuf:"bytes,6,opt,name=port_stimulus,json=portStimulus,proto3,oneof"`
}

type Action_AlarmStimulus struct {
	AlarmStimulus *AlarmStimulus `protobuf:"bytes,7,opt,name=alarm_stimulus,json=alarmStimulus,proto3,oneof"`
}

func (*Action_ConfigOperation) isAction_Actions() {}

func (*Action_ControlPlaneOperation) isAction_Actions() {}

func (*Action_DataPlaneStimulus) isAction_Actions() {}

func (*Action_ManagementOperation) isAction_Actions() {}

func (*Action_PortStimulus) isAction_Actions() {}

func (*Action_AlarmStimulus) isAction_Actions() {}

func (m *Action) GetActions() isAction_Actions {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *Action) GetConfigOperation() *ConfigOperation {
	if x, ok := m.GetActions().(*Action_ConfigOperation); ok {
		return x.ConfigOperation
	}
	return nil
}

func (m *Action) GetControlPlaneOperation() *ControlPlaneOperation {
	if x, ok := m.GetActions().(*Action_ControlPlaneOperation); ok {
		return x.ControlPlaneOperation
	}
	return nil
}

func (m *Action) GetDataPlaneStimulus() *DataPlaneStimulus {
	if x, ok := m.GetActions().(*Action_DataPlaneStimulus); ok {
		return x.DataPlaneStimulus
	}
	return nil
}

func (m *Action) GetManagementOperation() *ManagementOperation {
	if x, ok := m.GetActions().(*Action_ManagementOperation); ok {
		return x.ManagementOperation
	}
	return nil
}

func (m *Action) GetPortStimulus() *PortStimulus {
	if x, ok := m.GetActions().(*Action_PortStimulus); ok {
		return x.PortStimulus
	}
	return nil
}

func (m *Action) GetAlarmStimulus() *AlarmStimulus {
	if x, ok := m.GetActions().(*Action_AlarmStimulus); ok {
		return x.AlarmStimulus
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Action) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Action_ConfigOperation)(nil),
		(*Action_ControlPlaneOperation)(nil),
		(*Action_DataPlaneStimulus)(nil),
		(*Action_ManagementOperation)(nil),
		(*Action_PortStimulus)(nil),
		(*Action_AlarmStimulus)(nil),
	}
}

type Action_Requirement struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Action_Requirement) Reset()         { *m = Action_Requirement{} }
func (m *Action_Requirement) String() string { return proto.CompactTextString(m) }
func (*Action_Requirement) ProtoMessage()    {}
func (*Action_Requirement) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{14, 0}
}

func (m *Action_Requirement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action_Requirement.Unmarshal(m, b)
}
func (m *Action_Requirement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action_Requirement.Marshal(b, m, deterministic)
}
func (m *Action_Requirement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action_Requirement.Merge(m, src)
}
func (m *Action_Requirement) XXX_Size() int {
	return xxx_messageInfo_Action_Requirement.Size(m)
}
func (m *Action_Requirement) XXX_DiscardUnknown() {
	xxx_messageInfo_Action_Requirement.DiscardUnknown(m)
}

var xxx_messageInfo_Action_Requirement proto.InternalMessageInfo

type Expectation struct {
	// Types that are valid to be assigned to Expectations:
	//	*Expectation_ConfigExpectation
	//	*Expectation_ControlPlaneExpectation
	//	*Expectation_DataPlaneExpectation
	//	*Expectation_TelemetryExpectation
	Expectations isExpectation_Expectations `protobuf_oneof:"expectations"`
	// A unique identifier for the expectation. The main purpose is to be able to
	// find the expectation in the text file upon a failure.
	ExpectationId        string   `protobuf:"bytes,5,opt,name=expectation_id,json=expectationId,proto3" json:"expectation_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Expectation) Reset()         { *m = Expectation{} }
func (m *Expectation) String() string { return proto.CompactTextString(m) }
func (*Expectation) ProtoMessage()    {}
func (*Expectation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{15}
}

func (m *Expectation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Expectation.Unmarshal(m, b)
}
func (m *Expectation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Expectation.Marshal(b, m, deterministic)
}
func (m *Expectation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Expectation.Merge(m, src)
}
func (m *Expectation) XXX_Size() int {
	return xxx_messageInfo_Expectation.Size(m)
}
func (m *Expectation) XXX_DiscardUnknown() {
	xxx_messageInfo_Expectation.DiscardUnknown(m)
}

var xxx_messageInfo_Expectation proto.InternalMessageInfo

type isExpectation_Expectations interface {
	isExpectation_Expectations()
}

type Expectation_ConfigExpectation struct {
	ConfigExpectation *ConfigExpectation `protobuf:"bytes,1,opt,name=config_expectation,json=configExpectation,proto3,oneof"`
}

type Expectation_ControlPlaneExpectation struct {
	ControlPlaneExpectation *ControlPlaneExpectation `protobuf:"bytes,2,opt,name=control_plane_expectation,json=controlPlaneExpectation,proto3,oneof"`
}

type Expectation_DataPlaneExpectation struct {
	DataPlaneExpectation *DataPlaneExpectation `protobuf:"bytes,3,opt,name=data_plane_expectation,json=dataPlaneExpectation,proto3,oneof"`
}

type Expectation_TelemetryExpectation struct {
	TelemetryExpectation *TelemetryExpectation `protobuf:"bytes,4,opt,name=telemetry_expectation,json=telemetryExpectation,proto3,oneof"`
}

func (*Expectation_ConfigExpectation) isExpectation_Expectations() {}

func (*Expectation_ControlPlaneExpectation) isExpectation_Expectations() {}

func (*Expectation_DataPlaneExpectation) isExpectation_Expectations() {}

func (*Expectation_TelemetryExpectation) isExpectation_Expectations() {}

func (m *Expectation) GetExpectations() isExpectation_Expectations {
	if m != nil {
		return m.Expectations
	}
	return nil
}

func (m *Expectation) GetConfigExpectation() *ConfigExpectation {
	if x, ok := m.GetExpectations().(*Expectation_ConfigExpectation); ok {
		return x.ConfigExpectation
	}
	return nil
}

func (m *Expectation) GetControlPlaneExpectation() *ControlPlaneExpectation {
	if x, ok := m.GetExpectations().(*Expectation_ControlPlaneExpectation); ok {
		return x.ControlPlaneExpectation
	}
	return nil
}

func (m *Expectation) GetDataPlaneExpectation() *DataPlaneExpectation {
	if x, ok := m.GetExpectations().(*Expectation_DataPlaneExpectation); ok {
		return x.DataPlaneExpectation
	}
	return nil
}

func (m *Expectation) GetTelemetryExpectation() *TelemetryExpectation {
	if x, ok := m.GetExpectations().(*Expectation_TelemetryExpectation); ok {
		return x.TelemetryExpectation
	}
	return nil
}

func (m *Expectation) GetExpectationId() string {
	if m != nil {
		return m.ExpectationId
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Expectation) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Expectation_ConfigExpectation)(nil),
		(*Expectation_ControlPlaneExpectation)(nil),
		(*Expectation_DataPlaneExpectation)(nil),
		(*Expectation_TelemetryExpectation)(nil),
	}
}

// A group of actions to be run sequentially.
type SequentialActionGroup struct {
	Actions              []*Action `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SequentialActionGroup) Reset()         { *m = SequentialActionGroup{} }
func (m *SequentialActionGroup) String() string { return proto.CompactTextString(m) }
func (*SequentialActionGroup) ProtoMessage()    {}
func (*SequentialActionGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{16}
}

func (m *SequentialActionGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SequentialActionGroup.Unmarshal(m, b)
}
func (m *SequentialActionGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SequentialActionGroup.Marshal(b, m, deterministic)
}
func (m *SequentialActionGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SequentialActionGroup.Merge(m, src)
}
func (m *SequentialActionGroup) XXX_Size() int {
	return xxx_messageInfo_SequentialActionGroup.Size(m)
}
func (m *SequentialActionGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_SequentialActionGroup.DiscardUnknown(m)
}

var xxx_messageInfo_SequentialActionGroup proto.InternalMessageInfo

func (m *SequentialActionGroup) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

// A group of actions to be run in parallel.
type ParallelActionGroup struct {
	Options              *ParallelActionGroup_Options `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	Actions              []*Action                    `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ParallelActionGroup) Reset()         { *m = ParallelActionGroup{} }
func (m *ParallelActionGroup) String() string { return proto.CompactTextString(m) }
func (*ParallelActionGroup) ProtoMessage()    {}
func (*ParallelActionGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{17}
}

func (m *ParallelActionGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParallelActionGroup.Unmarshal(m, b)
}
func (m *ParallelActionGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParallelActionGroup.Marshal(b, m, deterministic)
}
func (m *ParallelActionGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParallelActionGroup.Merge(m, src)
}
func (m *ParallelActionGroup) XXX_Size() int {
	return xxx_messageInfo_ParallelActionGroup.Size(m)
}
func (m *ParallelActionGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ParallelActionGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ParallelActionGroup proto.InternalMessageInfo

func (m *ParallelActionGroup) GetOptions() *ParallelActionGroup_Options {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *ParallelActionGroup) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

type ParallelActionGroup_Options struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParallelActionGroup_Options) Reset()         { *m = ParallelActionGroup_Options{} }
func (m *ParallelActionGroup_Options) String() string { return proto.CompactTextString(m) }
func (*ParallelActionGroup_Options) ProtoMessage()    {}
func (*ParallelActionGroup_Options) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{17, 0}
}

func (m *ParallelActionGroup_Options) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParallelActionGroup_Options.Unmarshal(m, b)
}
func (m *ParallelActionGroup_Options) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParallelActionGroup_Options.Marshal(b, m, deterministic)
}
func (m *ParallelActionGroup_Options) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParallelActionGroup_Options.Merge(m, src)
}
func (m *ParallelActionGroup_Options) XXX_Size() int {
	return xxx_messageInfo_ParallelActionGroup_Options.Size(m)
}
func (m *ParallelActionGroup_Options) XXX_DiscardUnknown() {
	xxx_messageInfo_ParallelActionGroup_Options.DiscardUnknown(m)
}

var xxx_messageInfo_ParallelActionGroup_Options proto.InternalMessageInfo

// A group of actions to be run randomly.
type RandomizedActionGroup struct {
	Options              *RandomizedActionGroup_Options `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	Actions              []*Action                      `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *RandomizedActionGroup) Reset()         { *m = RandomizedActionGroup{} }
func (m *RandomizedActionGroup) String() string { return proto.CompactTextString(m) }
func (*RandomizedActionGroup) ProtoMessage()    {}
func (*RandomizedActionGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{18}
}

func (m *RandomizedActionGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RandomizedActionGroup.Unmarshal(m, b)
}
func (m *RandomizedActionGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RandomizedActionGroup.Marshal(b, m, deterministic)
}
func (m *RandomizedActionGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RandomizedActionGroup.Merge(m, src)
}
func (m *RandomizedActionGroup) XXX_Size() int {
	return xxx_messageInfo_RandomizedActionGroup.Size(m)
}
func (m *RandomizedActionGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_RandomizedActionGroup.DiscardUnknown(m)
}

var xxx_messageInfo_RandomizedActionGroup proto.InternalMessageInfo

func (m *RandomizedActionGroup) GetOptions() *RandomizedActionGroup_Options {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *RandomizedActionGroup) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

type RandomizedActionGroup_Options struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RandomizedActionGroup_Options) Reset()         { *m = RandomizedActionGroup_Options{} }
func (m *RandomizedActionGroup_Options) String() string { return proto.CompactTextString(m) }
func (*RandomizedActionGroup_Options) ProtoMessage()    {}
func (*RandomizedActionGroup_Options) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{18, 0}
}

func (m *RandomizedActionGroup_Options) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RandomizedActionGroup_Options.Unmarshal(m, b)
}
func (m *RandomizedActionGroup_Options) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RandomizedActionGroup_Options.Marshal(b, m, deterministic)
}
func (m *RandomizedActionGroup_Options) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RandomizedActionGroup_Options.Merge(m, src)
}
func (m *RandomizedActionGroup_Options) XXX_Size() int {
	return xxx_messageInfo_RandomizedActionGroup_Options.Size(m)
}
func (m *RandomizedActionGroup_Options) XXX_DiscardUnknown() {
	xxx_messageInfo_RandomizedActionGroup_Options.DiscardUnknown(m)
}

var xxx_messageInfo_RandomizedActionGroup_Options proto.InternalMessageInfo

type ActionGroup struct {
	// Types that are valid to be assigned to ActionGroup:
	//	*ActionGroup_SequentialActionGroup
	//	*ActionGroup_ParallelActionGroup
	//	*ActionGroup_RandomizedActionGroup
	ActionGroup isActionGroup_ActionGroup `protobuf_oneof:"action_group"`
	// A unique identifier for the action group. The main purpose is to be able to
	// find the action group in the text file upon a failure.
	ActionGroupId        string   `protobuf:"bytes,4,opt,name=action_group_id,json=actionGroupId,proto3" json:"action_group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionGroup) Reset()         { *m = ActionGroup{} }
func (m *ActionGroup) String() string { return proto.CompactTextString(m) }
func (*ActionGroup) ProtoMessage()    {}
func (*ActionGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{19}
}

func (m *ActionGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionGroup.Unmarshal(m, b)
}
func (m *ActionGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionGroup.Marshal(b, m, deterministic)
}
func (m *ActionGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionGroup.Merge(m, src)
}
func (m *ActionGroup) XXX_Size() int {
	return xxx_messageInfo_ActionGroup.Size(m)
}
func (m *ActionGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ActionGroup proto.InternalMessageInfo

type isActionGroup_ActionGroup interface {
	isActionGroup_ActionGroup()
}

type ActionGroup_SequentialActionGroup struct {
	SequentialActionGroup *SequentialActionGroup `protobuf:"bytes,1,opt,name=sequential_action_group,json=sequentialActionGroup,proto3,oneof"`
}

type ActionGroup_ParallelActionGroup struct {
	ParallelActionGroup *ParallelActionGroup `protobuf:"bytes,2,opt,name=parallel_action_group,json=parallelActionGroup,proto3,oneof"`
}

type ActionGroup_RandomizedActionGroup struct {
	RandomizedActionGroup *RandomizedActionGroup `protobuf:"bytes,3,opt,name=randomized_action_group,json=randomizedActionGroup,proto3,oneof"`
}

func (*ActionGroup_SequentialActionGroup) isActionGroup_ActionGroup() {}

func (*ActionGroup_ParallelActionGroup) isActionGroup_ActionGroup() {}

func (*ActionGroup_RandomizedActionGroup) isActionGroup_ActionGroup() {}

func (m *ActionGroup) GetActionGroup() isActionGroup_ActionGroup {
	if m != nil {
		return m.ActionGroup
	}
	return nil
}

func (m *ActionGroup) GetSequentialActionGroup() *SequentialActionGroup {
	if x, ok := m.GetActionGroup().(*ActionGroup_SequentialActionGroup); ok {
		return x.SequentialActionGroup
	}
	return nil
}

func (m *ActionGroup) GetParallelActionGroup() *ParallelActionGroup {
	if x, ok := m.GetActionGroup().(*ActionGroup_ParallelActionGroup); ok {
		return x.ParallelActionGroup
	}
	return nil
}

func (m *ActionGroup) GetRandomizedActionGroup() *RandomizedActionGroup {
	if x, ok := m.GetActionGroup().(*ActionGroup_RandomizedActionGroup); ok {
		return x.RandomizedActionGroup
	}
	return nil
}

func (m *ActionGroup) GetActionGroupId() string {
	if m != nil {
		return m.ActionGroupId
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ActionGroup) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ActionGroup_SequentialActionGroup)(nil),
		(*ActionGroup_ParallelActionGroup)(nil),
		(*ActionGroup_RandomizedActionGroup)(nil),
	}
}

type TestCase struct {
	// Set of actions (operations or external stimuli) to be run on the SUT.
	// Actions are bundled into groups with specific orders.
	ActionGroups []*ActionGroup `protobuf:"bytes,1,rep,name=action_groups,json=actionGroups,proto3" json:"action_groups,omitempty"`
	// Set of expectations "after" actions are all run.
	// 1- The test will not exercise the expectation if any of the operation
	// fails. 3- Checking expectations must not have any side effects on the
	// switch. 2- The test is expected to check all the expectations and return
	// the overall status including all the expectations that were not met.
	Expectations []*Expectation `protobuf:"bytes,2,rep,name=expectations,proto3" json:"expectations,omitempty"`
	// A unique identifier for the test case. The main purpose is to be able to
	// find the test case in the text file upon a failure.
	TestCaseId           string   `protobuf:"bytes,3,opt,name=test_case_id,json=testCaseId,proto3" json:"test_case_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestCase) Reset()         { *m = TestCase{} }
func (m *TestCase) String() string { return proto.CompactTextString(m) }
func (*TestCase) ProtoMessage()    {}
func (*TestCase) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{20}
}

func (m *TestCase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestCase.Unmarshal(m, b)
}
func (m *TestCase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestCase.Marshal(b, m, deterministic)
}
func (m *TestCase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestCase.Merge(m, src)
}
func (m *TestCase) XXX_Size() int {
	return xxx_messageInfo_TestCase.Size(m)
}
func (m *TestCase) XXX_DiscardUnknown() {
	xxx_messageInfo_TestCase.DiscardUnknown(m)
}

var xxx_messageInfo_TestCase proto.InternalMessageInfo

func (m *TestCase) GetActionGroups() []*ActionGroup {
	if m != nil {
		return m.ActionGroups
	}
	return nil
}

func (m *TestCase) GetExpectations() []*Expectation {
	if m != nil {
		return m.Expectations
	}
	return nil
}

func (m *TestCase) GetTestCaseId() string {
	if m != nil {
		return m.TestCaseId
	}
	return ""
}

type TestVector struct {
	// All the test cases which will be run on the switch. Order is important.
	TestCases            []*TestCase `protobuf:"bytes,2,rep,name=test_cases,json=testCases,proto3" json:"test_cases,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TestVector) Reset()         { *m = TestVector{} }
func (m *TestVector) String() string { return proto.CompactTextString(m) }
func (*TestVector) ProtoMessage()    {}
func (*TestVector) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3a5c7319d5782da, []int{21}
}

func (m *TestVector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestVector.Unmarshal(m, b)
}
func (m *TestVector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestVector.Marshal(b, m, deterministic)
}
func (m *TestVector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestVector.Merge(m, src)
}
func (m *TestVector) XXX_Size() int {
	return xxx_messageInfo_TestVector.Size(m)
}
func (m *TestVector) XXX_DiscardUnknown() {
	xxx_messageInfo_TestVector.DiscardUnknown(m)
}

var xxx_messageInfo_TestVector proto.InternalMessageInfo

func (m *TestVector) GetTestCases() []*TestCase {
	if m != nil {
		return m.TestCases
	}
	return nil
}

func init() {
	proto.RegisterEnum("stratum.testing.PortStimulus_State", PortStimulus_State_name, PortStimulus_State_value)
	proto.RegisterType((*ControlPlaneOperation)(nil), "stratum.testing.ControlPlaneOperation")
	proto.RegisterType((*ControlPlaneOperation_WriteOperation)(nil), "stratum.testing.ControlPlaneOperation.WriteOperation")
	proto.RegisterType((*ControlPlaneOperation_PacketOutOperation)(nil), "stratum.testing.ControlPlaneOperation.PacketOutOperation")
	proto.RegisterType((*ControlPlaneOperation_PipelineConfigOperation)(nil), "stratum.testing.ControlPlaneOperation.PipelineConfigOperation")
	proto.RegisterType((*ControlPlaneExpectation)(nil), "stratum.testing.ControlPlaneExpectation")
	proto.RegisterType((*ControlPlaneExpectation_ReadExpectation)(nil), "stratum.testing.ControlPlaneExpectation.ReadExpectation")
	proto.RegisterType((*ControlPlaneExpectation_PacketInExpectation)(nil), "stratum.testing.ControlPlaneExpectation.PacketInExpectation")
	proto.RegisterType((*ControlPlaneExpectation_PipelineConfigExpectation)(nil), "stratum.testing.ControlPlaneExpectation.PipelineConfigExpectation")
	proto.RegisterType((*DataPlaneStimulus)(nil), "stratum.testing.DataPlaneStimulus")
	proto.RegisterType((*DataPlaneStimulus_TrafficStimulus)(nil), "stratum.testing.DataPlaneStimulus.TrafficStimulus")
	proto.RegisterType((*DataPlaneStimulus_TrafficStimulus_Packet)(nil), "stratum.testing.DataPlaneStimulus.TrafficStimulus.Packet")
	proto.RegisterType((*DataPlaneExpectation)(nil), "stratum.testing.DataPlaneExpectation")
	proto.RegisterType((*DataPlaneExpectation_TrafficExpectation)(nil), "stratum.testing.DataPlaneExpectation.TrafficExpectation")
	proto.RegisterType((*DataPlaneExpectation_TrafficExpectation_Distribution)(nil), "stratum.testing.DataPlaneExpectation.TrafficExpectation.Distribution")
	proto.RegisterType((*DataPlaneExpectation_TrafficExpectation_Packet)(nil), "stratum.testing.DataPlaneExpectation.TrafficExpectation.Packet")
	proto.RegisterType((*ConfigOperation)(nil), "stratum.testing.ConfigOperation")
	proto.RegisterType((*PortStimulus)(nil), "stratum.testing.PortStimulus")
	proto.RegisterType((*AlarmStimulus)(nil), "stratum.testing.AlarmStimulus")
	proto.RegisterType((*ConfigExpectation)(nil), "stratum.testing.ConfigExpectation")
	proto.RegisterType((*TelemetryExpectation)(nil), "stratum.testing.TelemetryExpectation")
	proto.RegisterType((*TelemetryExpectation_Requirement)(nil), "stratum.testing.TelemetryExpectation.Requirement")
	proto.RegisterType((*SecurityOperation)(nil), "stratum.testing.SecurityOperation")
	proto.RegisterType((*DiagOperation)(nil), "stratum.testing.DiagOperation")
	proto.RegisterType((*SystemOperation)(nil), "stratum.testing.SystemOperation")
	proto.RegisterType((*FileOperation)(nil), "stratum.testing.FileOperation")
	proto.RegisterType((*ManagementOperation)(nil), "stratum.testing.ManagementOperation")
	proto.RegisterType((*Action)(nil), "stratum.testing.Action")
	proto.RegisterType((*Action_Requirement)(nil), "stratum.testing.Action.Requirement")
	proto.RegisterType((*Expectation)(nil), "stratum.testing.Expectation")
	proto.RegisterType((*SequentialActionGroup)(nil), "stratum.testing.SequentialActionGroup")
	proto.RegisterType((*ParallelActionGroup)(nil), "stratum.testing.ParallelActionGroup")
	proto.RegisterType((*ParallelActionGroup_Options)(nil), "stratum.testing.ParallelActionGroup.Options")
	proto.RegisterType((*RandomizedActionGroup)(nil), "stratum.testing.RandomizedActionGroup")
	proto.RegisterType((*RandomizedActionGroup_Options)(nil), "stratum.testing.RandomizedActionGroup.Options")
	proto.RegisterType((*ActionGroup)(nil), "stratum.testing.ActionGroup")
	proto.RegisterType((*TestCase)(nil), "stratum.testing.TestCase")
	proto.RegisterType((*TestVector)(nil), "stratum.testing.TestVector")
}

func init() { proto.RegisterFile("pkg/proto/testvector/tv.proto", fileDescriptor_e3a5c7319d5782da) }

var fileDescriptor_e3a5c7319d5782da = []byte{
	// 1933 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x59, 0x4f, 0x6f, 0x23, 0x49,
	0x15, 0x77, 0xc7, 0x4e, 0x3c, 0x79, 0xf1, 0xdf, 0x4a, 0x3c, 0x9e, 0x78, 0xd8, 0x25, 0xea, 0xdd,
	0x1d, 0x0d, 0x08, 0x39, 0x64, 0x30, 0xd2, 0xce, 0x8a, 0x65, 0x36, 0x99, 0x64, 0xec, 0x00, 0x93,
	0x44, 0xe5, 0xc0, 0x6a, 0x11, 0xa8, 0xa7, 0xd3, 0x5d, 0x76, 0x5a, 0xe3, 0xfe, 0x43, 0x77, 0x39,
	0x33, 0x83, 0x38, 0x70, 0xe0, 0x88, 0x56, 0xe2, 0xcc, 0x81, 0xcf, 0xc0, 0x07, 0x00, 0x0e, 0x70,
	0x40, 0x1c, 0x11, 0x17, 0xf6, 0x0e, 0x1f, 0x02, 0x71, 0x40, 0xd5, 0x55, 0xdd, 0xae, 0x76, 0x75,
	0x47, 0x66, 0xb5, 0xd2, 0x5e, 0x22, 0xd7, 0xab, 0x7a, 0xbf, 0xf7, 0xea, 0xbd, 0xdf, 0x7b, 0x55,
	0xd5, 0x81, 0xb7, 0x82, 0x97, 0xd3, 0xfd, 0x20, 0xf4, 0xa9, 0xbf, 0x4f, 0x49, 0x44, 0x6f, 0x88,
	0x45, 0xfd, 0x70, 0x9f, 0xde, 0xf4, 0x63, 0x19, 0x6a, 0x46, 0x34, 0x34, 0xe9, 0xdc, 0xed, 0xb3,
	0x49, 0xc7, 0x9b, 0xf6, 0x0e, 0xa7, 0x0e, 0xbd, 0x9e, 0x5f, 0xf5, 0x2d, 0xdf, 0xdd, 0x37, 0xaf,
	0xae, 0x9d, 0x99, 0x19, 0x5d, 0x13, 0xcf, 0x9e, 0x87, 0xf4, 0xda, 0xd9, 0x0f, 0x06, 0xe1, 0xdc,
	0xa3, 0x8e, 0x4b, 0x04, 0x62, 0x30, 0xd8, 0xbf, 0x39, 0x58, 0x48, 0x39, 0x66, 0xef, 0x9b, 0x12,
	0x84, 0x1f, 0x10, 0xcf, 0xf2, 0xbd, 0x89, 0x33, 0xdd, 0x9f, 0x7a, 0xae, 0x23, 0xf4, 0xe2, 0x9f,
	0xec, 0x0f, 0xd7, 0xd0, 0xff, 0x5e, 0x85, 0xce, 0x53, 0xdf, 0xa3, 0xa1, 0x3f, 0xbb, 0x98, 0x99,
	0x1e, 0x39, 0x0f, 0x48, 0x68, 0x52, 0xc7, 0xf7, 0xd0, 0x0b, 0x68, 0xbe, 0x0a, 0x1d, 0x4a, 0x0c,
	0x3f, 0x11, 0xdd, 0xd3, 0xf6, 0xb4, 0x87, 0x5b, 0x8f, 0xbe, 0xdd, 0x5f, 0xf2, 0xbc, 0x9f, 0x0b,
	0xd0, 0xff, 0x98, 0x69, 0xa7, 0xc3, 0x51, 0x09, 0x37, 0x5e, 0x65, 0x24, 0xc8, 0x85, 0x9d, 0xc0,
	0xb4, 0x5e, 0x12, 0x6a, 0xf8, 0x73, 0x2a, 0x99, 0x59, 0x8b, 0xcd, 0x3c, 0x5e, 0xd1, 0xcc, 0x45,
	0x0c, 0x71, 0x3e, 0xa7, 0xb2, 0x29, 0x14, 0x28, 0x52, 0xf4, 0x0b, 0xd8, 0x0d, 0x9c, 0x80, 0xcc,
	0x1c, 0x8f, 0x18, 0x3c, 0x30, 0x92, 0xcd, 0x72, 0x6c, 0xf3, 0xbb, 0xab, 0xda, 0x14, 0x38, 0x4f,
	0x63, 0x18, 0xd9, 0x70, 0x37, 0xc8, 0x9f, 0xea, 0xfd, 0x46, 0x83, 0x46, 0x36, 0x22, 0xe8, 0x43,
	0x68, 0x05, 0x03, 0x83, 0x07, 0x39, 0x24, 0x3f, 0x9b, 0x93, 0x88, 0x8a, 0x10, 0x6f, 0xf7, 0x83,
	0x41, 0xff, 0xe6, 0x80, 0x87, 0x10, 0xf3, 0x29, 0xdc, 0x08, 0x06, 0xf2, 0x18, 0x7d, 0x04, 0x6d,
	0x49, 0x3d, 0x0a, 0x7c, 0x2f, 0x22, 0x22, 0x76, 0x3b, 0x59, 0x7d, 0x3e, 0x87, 0x9b, 0x29, 0x00,
	0x17, 0xf4, 0xfe, 0xa6, 0x01, 0x52, 0xc3, 0x87, 0x06, 0x50, 0x0f, 0x06, 0xc6, 0x22, 0x35, 0xc2,
	0xa9, 0x96, 0x00, 0x4d, 0x35, 0xf0, 0x56, 0x30, 0x48, 0x07, 0xe8, 0x5d, 0x68, 0x78, 0x73, 0xd7,
	0xf0, 0x27, 0x42, 0x33, 0x8a, 0x7d, 0x29, 0xe3, 0x9a, 0x37, 0x77, 0xcf, 0x27, 0x7c, 0x5d, 0x84,
	0x74, 0xa8, 0xbb, 0x8e, 0x67, 0x44, 0x01, 0x21, 0xb6, 0x71, 0x15, 0x44, 0x71, 0xe0, 0x2b, 0x78,
	0xcb, 0x75, 0xbc, 0x31, 0x93, 0x1d, 0x05, 0x7c, 0x8d, 0xf9, 0x5a, 0x5a, 0x53, 0x11, 0x6b, 0xcc,
	0xd7, 0xe9, 0x9a, 0x16, 0x94, 0x2d, 0x3f, 0xba, 0xb7, 0xbe, 0xa7, 0x3d, 0x5c, 0xc7, 0xec, 0x67,
	0xef, 0x3f, 0x1a, 0x74, 0x0b, 0xf2, 0x82, 0x5c, 0x78, 0x3b, 0x18, 0x18, 0x11, 0xa1, 0xc6, 0x32,
	0x03, 0xb2, 0x71, 0xff, 0x9a, 0xd8, 0xe2, 0x98, 0xd0, 0x67, 0x7e, 0xf8, 0xca, 0x0c, 0x6d, 0xc7,
	0x9b, 0x66, 0x41, 0x93, 0x6c, 0xf4, 0x82, 0xc1, 0x98, 0xd0, 0xdc, 0x39, 0x14, 0xc0, 0x57, 0x0b,
	0xcd, 0x65, 0xf2, 0xf4, 0xf5, 0x55, 0xec, 0x89, 0xec, 0xdd, 0xcf, 0x35, 0xc8, 0x27, 0x8f, 0x6a,
	0x00, 0x29, 0x97, 0x23, 0xfd, 0xdf, 0x55, 0xe8, 0xca, 0xc4, 0x3d, 0x79, 0x1d, 0x10, 0x8b, 0xf2,
	0x50, 0x10, 0x68, 0x85, 0xc4, 0xb4, 0x0d, 0xb2, 0x90, 0x89, 0xcd, 0xbf, 0x7f, 0x2b, 0xf9, 0x25,
	0x8c, 0x3e, 0x26, 0xa6, 0x2d, 0x8d, 0x47, 0x25, 0xdc, 0x0c, 0xb3, 0x22, 0x14, 0x42, 0x47, 0x10,
	0xc8, 0xf1, 0x32, 0xb6, 0xf8, 0xc6, 0xbf, 0xb3, 0xb2, 0x2d, 0x4e, 0x9c, 0x53, 0x2f, 0x6b, 0x6f,
	0x3b, 0x50, 0xc5, 0xe8, 0x57, 0x1a, 0xdc, 0x5f, 0x0e, 0xb8, 0x6c, 0x9a, 0xd7, 0xf8, 0xd1, 0xea,
	0xa6, 0x33, 0xb1, 0xce, 0x3a, 0xb0, 0x1b, 0x14, 0x4d, 0xf6, 0x3e, 0xd5, 0xa0, 0xb9, 0x14, 0x21,
	0xf4, 0x01, 0x34, 0x83, 0x81, 0x11, 0x07, 0x3e, 0xcb, 0x38, 0x24, 0x18, 0xc0, 0x14, 0x12, 0x6a,
	0xd5, 0x83, 0x81, 0x34, 0x44, 0x4f, 0xe2, 0x3a, 0x17, 0xba, 0x3c, 0xdf, 0xac, 0xb6, 0xca, 0x52,
	0x9f, 0xe0, 0xcb, 0x17, 0x65, 0x2e, 0x8f, 0xa3, 0xde, 0x5f, 0x35, 0xd8, 0xce, 0x09, 0x23, 0x3a,
	0x80, 0xda, 0xa2, 0xce, 0x9d, 0x84, 0x06, 0xcd, 0x4c, 0x99, 0x9f, 0x7a, 0x18, 0x92, 0x2a, 0x3f,
	0xf5, 0xbe, 0xf4, 0x22, 0xff, 0xaf, 0x06, 0xbb, 0x85, 0x69, 0x11, 0x65, 0x3e, 0x5d, 0xb9, 0xcc,
	0x87, 0x2b, 0x95, 0xf9, 0xf0, 0xf6, 0x32, 0x9f, 0xae, 0x5e, 0xe6, 0xc3, 0xd5, 0xca, 0x7c, 0x58,
	0x58, 0xe6, 0x0d, 0xa8, 0x49, 0x84, 0x8e, 0xf4, 0x3f, 0x95, 0xa1, 0x7d, 0x6c, 0x52, 0x33, 0xa6,
	0xee, 0x98, 0x3a, 0xee, 0x7c, 0x36, 0x8f, 0x90, 0x01, 0x2d, 0x1a, 0x9a, 0x93, 0x89, 0x63, 0x19,
	0x91, 0x90, 0x89, 0x8d, 0x3f, 0x52, 0xb8, 0xaf, 0x68, 0xf7, 0x2f, 0xb9, 0x6a, 0x32, 0x66, 0xc5,
	0x4d, 0xb3, 0xa2, 0xde, 0x1f, 0xd6, 0xa0, 0xb9, 0xb4, 0x0c, 0xdd, 0x87, 0x4d, 0x9b, 0xdc, 0x38,
	0x16, 0x31, 0x1c, 0x3b, 0xb6, 0x56, 0xc1, 0x77, 0xb8, 0xe0, 0xd4, 0x46, 0x08, 0x2a, 0x81, 0x1f,
	0xd2, 0x38, 0x1c, 0x75, 0x1c, 0xff, 0x46, 0x63, 0xa8, 0x26, 0x1c, 0x2a, 0xc7, 0x64, 0x7e, 0xfc,
	0xff, 0x3b, 0x27, 0x48, 0x8a, 0x13, 0x24, 0xf4, 0x00, 0x9a, 0x82, 0x9f, 0x21, 0x09, 0x66, 0x8e,
	0x65, 0x72, 0x5e, 0x95, 0x71, 0x3d, 0x26, 0x28, 0x16, 0x42, 0x95, 0xa1, 0xeb, 0x2b, 0x30, 0x74,
	0xa3, 0x90, 0xa1, 0xd5, 0x05, 0x43, 0x75, 0xd8, 0xe0, 0x4e, 0xa1, 0x7b, 0x6c, 0x83, 0x6f, 0x66,
	0xbe, 0x69, 0xc7, 0xfb, 0xae, 0xe1, 0x64, 0x78, 0xb4, 0x09, 0x55, 0x9e, 0x18, 0x47, 0xff, 0x67,
	0x05, 0x76, 0xd2, 0x6d, 0xca, 0x5c, 0x7e, 0x09, 0xdb, 0x49, 0x12, 0x57, 0x69, 0xd5, 0x79, 0x18,
	0x49, 0xb4, 0xb2, 0x9d, 0x0b, 0x51, 0x45, 0xda, 0xfb, 0x73, 0x19, 0x90, 0xba, 0xf8, 0xf6, 0x9c,
	0xee, 0xc0, 0x3a, 0xcb, 0x23, 0x6f, 0x45, 0x75, 0xcc, 0x07, 0xe8, 0x93, 0xe5, 0xac, 0x3e, 0xf9,
	0xbc, 0xae, 0x7e, 0xe9, 0xb9, 0x75, 0xa0, 0x66, 0x3b, 0x11, 0x0d, 0x9d, 0xab, 0x79, 0x1c, 0xfa,
	0x6a, 0x1c, 0xfa, 0x93, 0xcf, 0xbd, 0x9f, 0x63, 0x09, 0x0c, 0x67, 0xa0, 0x13, 0x1a, 0xdd, 0x59,
	0xd0, 0xa8, 0x01, 0x35, 0x79, 0xfd, 0x4a, 0xb4, 0x5a, 0xee, 0x0e, 0xbf, 0xd6, 0xa0, 0xb9, 0x7c,
	0x13, 0xfa, 0x00, 0x5a, 0xec, 0xf6, 0x1f, 0x5f, 0x4e, 0xb2, 0x4d, 0xb1, 0xd5, 0x8f, 0x9f, 0x05,
	0x63, 0x42, 0xd3, 0x0b, 0x27, 0x13, 0x2c, 0xc6, 0xe8, 0x43, 0x68, 0x4b, 0xba, 0x99, 0x0e, 0xd7,
	0x96, 0x94, 0x93, 0x63, 0x28, 0xd5, 0xe6, 0x02, 0xfd, 0x2f, 0x1a, 0xd4, 0x2e, 0xfc, 0x90, 0xa6,
	0x2d, 0xe3, 0x21, 0x6c, 0x3a, 0x1e, 0x25, 0xe1, 0xc4, 0xb4, 0x88, 0x70, 0x02, 0x38, 0xce, 0x85,
	0x49, 0xaf, 0xf1, 0x62, 0x12, 0x3d, 0x86, 0xf5, 0x88, 0x9a, 0x94, 0x5b, 0x6b, 0x3c, 0x7a, 0x47,
	0xc9, 0x81, 0x8c, 0xdb, 0x1f, 0xb3, 0xa5, 0x98, 0x6b, 0xe8, 0xe7, 0xb0, 0x1e, 0x8f, 0x51, 0x1b,
	0xea, 0xe3, 0xcb, 0xc3, 0xcb, 0x13, 0xe3, 0x87, 0x67, 0xdf, 0x3f, 0x3b, 0xff, 0xf8, 0xac, 0x55,
	0x42, 0x35, 0xb8, 0x23, 0x44, 0x17, 0x2d, 0x0d, 0x35, 0x00, 0xf8, 0xe8, 0x98, 0xcd, 0xae, 0xa1,
	0x0e, 0xb4, 0xf9, 0xf8, 0xec, 0xfc, 0xd2, 0xb8, 0xc0, 0x27, 0xe3, 0x93, 0xb3, 0xcb, 0x56, 0x59,
	0x3f, 0x80, 0xfa, 0xe1, 0xcc, 0x0c, 0xdd, 0x74, 0x1b, 0x7b, 0xb0, 0x6e, 0x32, 0x41, 0xce, 0x16,
	0xf8, 0x84, 0xfe, 0xa9, 0x06, 0x6d, 0xf5, 0xb4, 0x4a, 0x52, 0x31, 0x2d, 0x4a, 0xc5, 0x70, 0x29,
	0x15, 0x43, 0x35, 0x15, 0xd3, 0xc2, 0x54, 0x0c, 0x97, 0x53, 0x21, 0x09, 0xf4, 0xcf, 0xd6, 0x60,
	0xe7, 0x92, 0xcc, 0x88, 0x4b, 0x68, 0xf8, 0x46, 0xf6, 0x69, 0x0c, 0x5b, 0xcc, 0x15, 0x27, 0x24,
	0x2e, 0xf1, 0x12, 0x77, 0x0e, 0x94, 0x70, 0xe7, 0xe9, 0xf6, 0xf1, 0x42, 0x11, 0xcb, 0x28, 0xe8,
	0x07, 0x70, 0x97, 0xf3, 0x66, 0x7e, 0x15, 0x59, 0xa1, 0x73, 0xb5, 0x78, 0xed, 0x70, 0x8f, 0xef,
	0x0a, 0xf2, 0x24, 0xd3, 0xc9, 0xa6, 0x77, 0x62, 0x06, 0x2d, 0x49, 0xd1, 0x13, 0xa8, 0x99, 0x16,
	0x33, 0x68, 0x4c, 0x43, 0x7f, 0x1e, 0x88, 0x5b, 0xdd, 0x57, 0x14, 0x1f, 0x0f, 0xe3, 0x45, 0x43,
	0xb6, 0x06, 0x6f, 0x99, 0x8b, 0x01, 0x3a, 0x87, 0xae, 0xe2, 0x8e, 0x88, 0x60, 0x25, 0x6e, 0x59,
	0x5d, 0xc5, 0x1f, 0x11, 0xc7, 0xce, 0x92, 0x43, 0xe2, 0x19, 0x55, 0x87, 0x2d, 0x69, 0xef, 0xfa,
	0x36, 0xb4, 0xc7, 0xc4, 0x9a, 0x87, 0x0e, 0x7d, 0x93, 0xd6, 0x9d, 0xde, 0x84, 0xfa, 0xb1, 0x63,
	0x2e, 0x0a, 0x51, 0x6f, 0x43, 0x73, 0xfc, 0x26, 0xa2, 0xc4, 0xcd, 0xac, 0x79, 0xe6, 0xcc, 0x16,
	0x0f, 0x44, 0xfd, 0x1f, 0x6b, 0xb0, 0xfd, 0xdc, 0xf4, 0xcc, 0x69, 0x0c, 0xbc, 0x28, 0xe2, 0x31,
	0xa0, 0x48, 0x58, 0x50, 0x5e, 0xe7, 0xba, 0x12, 0x08, 0xc5, 0x99, 0x51, 0x09, 0xb7, 0xa3, 0x65,
	0x21, 0x1a, 0x42, 0xc3, 0x76, 0xcc, 0xa9, 0xf2, 0x0e, 0x7f, 0x5b, 0x6d, 0x78, 0xf2, 0x46, 0x46,
	0x25, 0x5c, 0xb7, 0x65, 0x01, 0x7a, 0x0e, 0xad, 0x28, 0xde, 0x99, 0xf2, 0xbc, 0xde, 0x53, 0x7d,
	0xcb, 0x86, 0x80, 0x5d, 0x36, 0xa2, 0xac, 0x88, 0xf9, 0x35, 0x71, 0x66, 0xf2, 0x67, 0x88, 0x4a,
	0x81, 0x5f, 0x99, 0xe0, 0x31, 0xbf, 0x26, 0xb2, 0xe0, 0xa8, 0x0a, 0xeb, 0x93, 0x99, 0xff, 0x2a,
	0xd2, 0x3f, 0xab, 0xc0, 0x06, 0x67, 0x07, 0x3a, 0xc9, 0xe3, 0xfb, 0x3b, 0x05, 0x5c, 0x2a, 0x66,
	0xf8, 0x73, 0x68, 0x29, 0x5f, 0x14, 0xd6, 0x0a, 0xb6, 0xac, 0x7e, 0x33, 0x68, 0x5a, 0x4b, 0x4d,
	0xfa, 0x05, 0x74, 0x2d, 0xfe, 0x26, 0x31, 0x02, 0x76, 0xb0, 0x28, 0x81, 0x7c, 0xb0, 0xda, 0x77,
	0x8a, 0x51, 0x09, 0x77, 0xac, 0xdc, 0x8f, 0x3b, 0x97, 0xb0, 0x6d, 0x9b, 0xd4, 0x14, 0xf0, 0xe9,
	0x2d, 0xb1, 0x52, 0x40, 0x21, 0xe5, 0x22, 0xc6, 0x28, 0x64, 0x2b, 0x17, 0xcf, 0x4f, 0x60, 0xc7,
	0x4d, 0xe9, 0x2a, 0x39, 0xbd, 0x1e, 0xc3, 0xbe, 0xab, 0xc0, 0xe6, 0x70, 0x9b, 0xbd, 0xed, 0xdc,
	0x1c, 0xca, 0x1f, 0x43, 0x9d, 0x5d, 0x30, 0x16, 0xae, 0x6e, 0xc4, 0x98, 0x6f, 0xdd, 0x7a, 0x12,
	0x8c, 0x4a, 0xb8, 0x16, 0xc8, 0x27, 0xce, 0x10, 0x1a, 0x71, 0x47, 0x5e, 0xc0, 0x54, 0x0b, 0xb8,
	0x94, 0x69, 0xf1, 0x8c, 0x4b, 0xa6, 0x2c, 0x58, 0x2a, 0x79, 0x76, 0xa1, 0xe3, 0x1d, 0x26, 0xd2,
	0xff, 0x58, 0x86, 0xad, 0x6c, 0x47, 0x45, 0x39, 0x4f, 0xd1, 0xa2, 0x5a, 0xcd, 0x7b, 0x6a, 0xb6,
	0x2d, 0xe5, 0xe8, 0x98, 0xc0, 0x6e, 0x96, 0x20, 0xea, 0x0b, 0xfb, 0xe1, 0xaa, 0xcf, 0xdc, 0x51,
	0x09, 0x77, 0xad, 0x82, 0x8f, 0x05, 0x3f, 0x85, 0xbb, 0x12, 0x4d, 0xd4, 0xb7, 0xf4, 0x7b, 0x2b,
	0x5d, 0x86, 0x46, 0x25, 0xbc, 0x63, 0xe7, 0xdd, 0x71, 0x7f, 0x02, 0x1d, 0x9a, 0x9c, 0x24, 0x19,
	0xf4, 0x4a, 0x01, 0x7a, 0xde, 0xb9, 0xc3, 0xd0, 0x69, 0xde, 0x59, 0xf6, 0x1e, 0x34, 0x24, 0x4c,
	0x76, 0x85, 0x65, 0x3c, 0xdc, 0xc4, 0x75, 0x49, 0x7a, 0xaa, 0xde, 0x9a, 0xbe, 0x07, 0x9d, 0x31,
	0x3b, 0x6a, 0x3c, 0xea, 0x98, 0x33, 0xe9, 0x10, 0x41, 0x07, 0x69, 0x92, 0xef, 0x69, 0xe2, 0x9c,
	0xc8, 0xef, 0x13, 0x38, 0x25, 0xc3, 0x6f, 0xe3, 0x97, 0x77, 0x68, 0xce, 0x66, 0x24, 0x03, 0xf5,
	0x0c, 0xaa, 0x7e, 0x90, 0x40, 0xb1, 0xad, 0x7e, 0x43, 0xe5, 0xb1, 0xaa, 0xd6, 0x3f, 0xe7, 0x3a,
	0x38, 0x51, 0x96, 0x5d, 0x5a, 0x5b, 0xcd, 0xa5, 0xde, 0x26, 0x54, 0x05, 0x8c, 0xfe, 0x3b, 0x0d,
	0x3a, 0xd8, 0xf4, 0x6c, 0xdf, 0x75, 0x7e, 0x4e, 0x6c, 0xd9, 0xbf, 0xd1, 0xb2, 0x7f, 0x7d, 0x05,
	0x37, 0x57, 0xf1, 0x8b, 0xf6, 0xf0, 0x5f, 0x6b, 0xb0, 0x25, 0xfb, 0xf5, 0x02, 0xba, 0x51, 0x9a,
	0x1b, 0x23, 0x73, 0x0d, 0xd0, 0x0a, 0x1a, 0x63, 0x6e, 0x2e, 0x59, 0x63, 0x8c, 0x72, 0x93, 0xfc,
	0x63, 0xe8, 0x04, 0x22, 0xf2, 0x59, 0xfc, 0xb5, 0x82, 0x1e, 0x96, 0x93, 0x27, 0xfe, 0x7d, 0x4a,
	0xcd, 0xfa, 0x0b, 0xe8, 0x86, 0x69, 0xd4, 0x8c, 0x9c, 0x4b, 0xcc, 0x83, 0xd5, 0xa2, 0xcc, 0xbc,
	0x0f, 0x73, 0xf3, 0xf6, 0x00, 0x9a, 0x32, 0x2c, 0xe3, 0x7c, 0x85, 0x73, 0x5e, 0xba, 0x00, 0x71,
	0xce, 0xcb, 0xeb, 0xf4, 0xdf, 0x6b, 0x70, 0xe7, 0x92, 0x44, 0xf4, 0xa9, 0x19, 0x11, 0x74, 0x08,
	0x75, 0x79, 0x32, 0x61, 0xfb, 0xed, 0x37, 0xac, 0x9a, 0x64, 0x20, 0x42, 0x1f, 0x65, 0x6b, 0x4a,
	0xa4, 0x5e, 0x45, 0x90, 0xca, 0x15, 0x67, 0x34, 0xd0, 0x1e, 0xd4, 0xd8, 0x22, 0xc3, 0x32, 0xa3,
	0xf8, 0xf5, 0x59, 0x8e, 0xb7, 0x01, 0x54, 0x38, 0x79, 0x6a, 0xeb, 0xcf, 0x00, 0x98, 0xcb, 0x3f,
	0x8a, 0xff, 0xad, 0x82, 0xde, 0x07, 0x48, 0xd7, 0x27, 0xf6, 0x76, 0x73, 0xfa, 0x07, 0x57, 0xc7,
	0x9b, 0x09, 0x50, 0x74, 0x54, 0xfe, 0xa5, 0x56, 0xba, 0xda, 0x88, 0xff, 0x1b, 0xf2, 0xad, 0xff,
	0x05, 0x00, 0x00, 0xff, 0xff, 0xc1, 0xfd, 0x78, 0x34, 0xb4, 0x19, 0x00, 0x00,
}
